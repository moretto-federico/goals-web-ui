{"version":3,"sources":["reportWebVitals.js","compoents/utils.jsx","compoents/NewsItem/NewsItem.jsx","../../goals/src/domain/Repository.js","../../goals/src/domain/session/climbingSession/ClimbingSessionRepository.js","../../goals/src/domain/session/fitnessSession/FitnessSessionRepository.js","../../goals/src/domain/session/runSession/RunSessionRepository.js","../../goals/src/domain/session/trekkingSession/TrekkingSessionRepository.js","../../goals/src/readmodel/ReadSessionsRepository.js","../../goals/src/util/data.js","../../goals/src/util/dataType.js","../../goals/src/service/CommandResponse.js","../../goals/src/service/CommandResponseError.js","../../goals/src/service/Command.js","../../goals/src/service/commands/CreateClimbingSession.js","../../goals/src/service/commands/CreateFitnessSession.js","../../goals/src/service/commands/CreateRunSession.js","../../goals/src/service/commands/CreateTrekkingSession.js","../../goals/src/service/commands/ReadSessionByYear.js","../../goals/src/service/commands/UpdateClimbingSession.js","../../goals/src/service/commands/UpdateFitnessSession.js","../../goals/src/service/commands/UpdateRunSession.js","../../goals/src/service/commands/UpdateTrekkingSession.js","../../goals/src/domain/RepositoryMap.js","../../goals/src/domain/session/Session.js","../../goals/src/domain/session/fitnessSession/FitnessSession.js","../../goals/src/util/speed.js","../../goals/src/domain/RequestError.js","../../goals/src/domain/session/SpeedSession.js","../../goals/src/domain/session/runSession/RunSession.js","../../goals/src/domain/session/trekkingSession/TrekkingSession.js","../../goals/src/domain/session/climbingSession/ClimbingSession.js","../../goals/src/service/Service.js","../../goals/src/persistence/local/Repository.js","../../goals/src/service/ServiceOnAggregate.js","../../goals/src/service/CommandHandler.js","../../goals/src/service/commands/DeleteFitnessSession.js","../../goals/src/service/commands/DeleteRunSession.js","../../goals/src/service/commands/DeleteTrekkingSession.js","../../goals/src/service/commands/DeleteClimbingSession.js","../../goals/src/service/configuration.js","../../goals/src/index.js","compoents/useGoals.js","compoents/News/News.jsx","compoents/Menu/Menu.jsx","compoents/Tootlbar/Link.jsx","compoents/Tootlbar/Toolbar.jsx","pages/Home.jsx","compoents/Input/Input.jsx","pages/NewSession.jsx","pages/Running.jsx","local/LocalSessionRepository.js","local/LocalSessionsRepository.js","pages/Trekking.jsx","pages/Climbing.jsx","pages/Fitness.jsx","pages/Settings.jsx","index.js","local/initilization.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","urlBase","activities","running","type","label","Icon","FaRunning","trekking","FaMountain","climbing","GiMountainClimbing","fitness","MdFitnessCenter","types","date","toApiValue","value","moment","toISOString","toCsvValue","_","identity","fromCsvValue","string","s","replaceAll","number","toNumber","duration","as","activityProps","inputPlaceholder","createInitValue","format","description","distance","elevationGain","kmPerHour","minPerKm","id","keys","join","infoBuilder","BiTimer","GiPathDistance","round","TiArrowLoop","SiSpeedtest","NewsItem","when","info","className","map","i","InfoIcon","Repository","entity","ClimbingSessionRepository","FitnessSessionRepository","RunSessionRepository","TrekkingSessionRepository","ReadSessionsRepository","year","uuid","uuidv4","DataType","this","message","replace","IdType","validatev4","validate","DateType","isString","test","NumberType","isNumber","DurationType","StringType","createDataType","find","t","CommandResponse","code","payload","error","commandResponse","JSON","stringify","UNDEFINED_HANDLER","UNDEFINED_REPOSITORY","OK","CommandResponseError","name","Error","Command","meta","defaultValue","forEach","isNil","CreateClimbingSession","init","Date","CreateFitnessSession","CreateRunSession","CreateTrekkingSession","ReadSessionByYear","UpdateClimbingSession","UpdateFitnessSession","UpdateRunSession","UpdateTrekkingSession","RepositoryMap","instance","Session","setDate","setDescription","setDuration","FitnessSession","dto","minutes","hours","km","RequestError","request","SpeedSession","setRunData","result","speed","RunSession","TrekkingSession","setElevationGain","ClimbingSession","ServiceTransaction","require","repository","readonly","save","dispose","create","update","delete","getById","Service","hooks","settings","context","correlationId","transaction","command","commandContext","createContext","beforeExecution","response","apply","beforeSave","createOk","createByError","ServiceOnAggegate","createNew","getId","property","noop","createRepo","aggregate","aggregateId","CreateServiceContext","commandHandler","createService","serviceSettings","registerCommand","merge","repositoryMap","CommandHandler","handlers","ServiceClass","executor","Object","getPrototypeOf","constructor","execute","DeleteFitnessSession","DeleteRunSession","DeleteTrekkingSession","DeleteClimbingSession","initFitnessSessionServices","ch","toCreateAggregate","forCommand","toDeleteAggregate","toUpdateAggregate","initTrekkingSessionServices","initRunSessionServices","initClimbingSessionServices","api","url","method","Promise","resolve","reject","startsWith","substring","length","repositories","sessions","registerRepository","initialize","getAllByYear","useGoals","News","useState","setSessions","useEffect","n","Menu","children","show","setShow","onClick","Link","text","title","href","Links","act","Toolbar","FiSettings","Home","Input","placeholder","onChange","htmlFor","Tracking","CreateNewSession","props","navigate","useNavigate","execution","setExecution","reduce","obj","p","state","setState","handleSubmit","event","a","preventDefault","status","cleanTimeout","undefined","timeoutId","setTimeout","clearTimeout","onSubmit","evt","target","NewSession","Running","LocalSessionRepository","cache","rawData","localStorage","getItem","parse","list","getData","ids","e","filter","includes","setItem","push","LocalSessionsRepository","names","items","reverse","sortBy","Trekking","Climbing","Fitness","ExportPanel","exportToCsv","setExportToCsv","exportRef","useRef","content","current","click","k","fileName","ref","download","getSessionsByCsv","lines","split","header","shift","line","values","Import","toImport","setToImport","setText","errors","setErrors","handlePrimaryClick","session","err","Settings","momentDurationFormatSetup","sessionsRepository","registerSession","ReactDOM","render","StrictMode","basename","path","element","document","getElementById"],"mappings":"uUAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wHCDDQ,EAAU,iBAEVC,EAAa,CACxBC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAMC,KAERC,SAAU,CACRJ,KAAM,WACNC,MAAO,WACPC,KAAMG,KAERC,SAAU,CACRN,KAAM,WACNC,MAAO,WACPC,KAAMK,KAERC,QAAS,CACPR,KAAM,UACNC,MAAO,UACPC,KAAMO,MAYH,IAAMC,EAAQ,CACnBC,KAAM,CACJC,WAAY,SAACC,GAAD,OAAWC,IAAOD,GAAOE,eACrCC,WAAYC,IAAEC,SACdC,aAAcF,IAAEC,UAElBE,OAAQ,CACNR,WAAYK,IAAEC,SACdF,WAhBJ,SAAqBK,GACnB,OAAOA,EAAEC,WAAW,IAAK,aAAaA,WAAW,KAAM,iBAgBrDH,aAbJ,SAAqBE,GACnB,OAAOA,EAAEC,WAAW,YAAa,KAAKA,WAAW,eAAgB,QAcjEC,OAAQ,CACNX,WAAYK,IAAEO,SACdR,WAAYC,IAAEC,SACdC,aAAcF,IAAEO,UAElBC,SAAU,CACRb,WAAY,SAACC,GAAD,OAAWC,IAAOW,SAASZ,GAAOa,GAAG,YACjDV,WAAYC,IAAEC,SACdC,aAAcF,IAAEO,WAIPG,EAAgB,CAC3BhB,KAAM,CACJV,MAAO,OACP2B,iBAAkB,aAClBC,gBAAiB,kBAAMf,MAASgB,OAAO,eACvC9B,KAAMU,EAAMC,MAEdoB,YAAa,CACX9B,MAAO,cACP2B,iBAAkB,yCAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMU,QAEdK,SAAU,CACRxB,MAAO,WACP2B,iBAAkB,WAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMe,UAEdO,SAAU,CACR/B,MAAO,WACP2B,iBAAkB,QAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMa,QAEdU,cAAe,CACbhC,MAAO,iBACP2B,iBAAkB,MAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMa,QAEdW,UAAW,CACTjC,MAAO,OACP2B,iBAAkB,cAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMa,QAEdY,SAAU,CACRlC,MAAO,SACP2B,iBAAkB,iBAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMa,QAEda,GAAI,CACFnC,MAAO,WACP2B,iBAAkB,gBAClBC,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMU,QAEdpB,KAAM,CACJC,MAAO,eACP2B,iBAAkBX,IAAEoB,KAAKvC,GAAYwC,KAAK,KAC1CT,gBAAiB,iBAAM,IACvB7B,KAAMU,EAAMU,S,OCxGVmB,EAAc,CAClBxC,QAAS,gBAAG0B,EAAH,EAAGA,SAAUO,EAAb,EAAaA,SAAUE,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,SAAlC,MAAiD,CACxD,CACEjC,KAAMsC,IACN3B,MAAOC,IAAOW,SAASA,EAAU,KAAKK,OAAO,YAE/C,CACE5B,KAAMuC,IACN5B,MAAM,GAAD,OAAKI,IAAEyB,MAAMV,EAAW,IAAM,GAA9B,QAEP,CACE9B,KAAMyC,IACN9B,MAAM,GAAD,OAAKsB,EAAL,YAEP,CACEjC,KAAM0C,IACN/B,MAAM,GAAD,OAAKqB,EAAL,YAGT1B,QAAS,gBAAGiB,EAAH,EAAGA,SAAH,MAAkB,CACzB,CACEvB,KAAMsC,IACN3B,MAAOC,IAAOW,SAASA,EAAU,KAAKK,OAAO,cAGjDxB,SAAU,gBAAGmB,EAAH,EAAGA,SAAH,MAAkB,CAC1B,CACEvB,KAAMsC,IACN3B,MAAOC,IAAOW,SAASA,EAAU,KAAKK,OAAO,cAGjD1B,SAAU,gBAAGqB,EAAH,EAAGA,SAAUO,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,cAAvB,MAA2C,CACnD,CACE/B,KAAMG,IACNQ,MAAM,GAAD,OAAKoB,EAAL,OAEP,CACE/B,KAAMsC,IACN3B,MAAOC,IAAOW,SAASA,EAAU,KAAKK,OAAO,SAE/C,CACE5B,KAAMuC,IACN5B,MAAM,GAAD,OAAKI,IAAEyB,MAAMV,EAAW,IAAM,GAA9B,WAKI,SAASa,EAAT,GAUX,IATF5C,EASC,EATDA,MACA8B,EAQC,EARDA,YACA/B,EAOC,EAPDA,KACAgC,EAMC,EANDA,SACArB,EAKC,EALDA,KACAc,EAIC,EAJDA,SACAQ,EAGC,EAHDA,cACAC,EAEC,EAFDA,UACAC,EACC,EADDA,SAEMW,EAAOhC,IAAOH,EAAM,sBAAsBmB,OAAO,MACjD5B,EAAOJ,EAAWE,GAAME,KACxB6C,EAAOR,EAAYvC,GAAM,CAC7ByB,WACAO,WACAC,gBACAC,YACAC,aAEF,OACE,qBAAIa,UAAU,kBAAd,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,cAAC9C,EAAD,IACA,mBAAG8C,UAAU,gCAAb,SAA8C/C,OAEhD,sBAAK+C,UAAU,kCAAf,UACE,mBAAGA,UAAU,sCAAb,SAAoDjB,IACpD,mBAAGiB,UAAU,+BAAb,SAA6CF,UAGjD,oBAAIE,UAAU,2BAAd,SACGD,EAAKE,KAAI,WAA4BC,GAA5B,IAASC,EAAT,EAAGjD,KAAgBW,EAAnB,EAAmBA,MAAnB,OACR,qBAAYmC,UAAU,gCAAtB,UACE,cAACG,EAAD,IACA,mBAAGH,UAAU,gCAAb,SAA8CnC,MAFvCqC,W,gDC5FEE,E,oFACjB,c,qBAGA,c,oBAGA,SAAQC,M,oBAGR,SAAQA,M,qBAGR,SAASjB,Q,KCXQkB,E,4HAAkCF,GCAlCG,E,4HAAiCH,GCAjCI,E,4HAA6BJ,GCA7BK,E,4HAAkCL,GCFlCM,E,4FACjB,SAAcC,GACV,MAAO,O,qCCAR,SAASC,IACZ,OAAOC,c,ICALC,E,WACF,WAAa9D,GAAM,oBACf+D,KAAK/D,KAAOA,E,4CAGhB,SAAUa,EAAOmD,GACb,OAAO/C,IAAEgD,QAAQD,EAAS,WAAYD,KAAK/D,U,KAI7CkE,E,kDACF,aAAe,uCACL,M,4CAGV,SAAUrD,EAAOmD,GACb,IDdD,SAAmBnD,GACtB,OAAOsD,YAAWtD,GCaTuD,CAASvD,GACV,uEAAsBA,EAAOmD,O,GAPpBF,GAafO,E,kDACF,aAAe,uCACL,Q,4CAGV,SAAUxD,EAAOmD,GACb,IAAK/C,IAAEqD,SAASzD,KAAW,2EAA2E0D,KAAK1D,GACvG,uEAAsBA,EAAOmD,O,GAPlBF,GAajBU,E,kDACF,aAAe,uCACL,U,4CAGV,SAAU3D,EAAOmD,GACb,IAAK/C,IAAEwD,SAAS5D,GACZ,uEAAsBA,EAAOmD,O,GAPhBF,GAanBY,E,kDACF,aAAe,uCACL,Y,4CAGV,SAAU7D,EAAOmD,GACb,IAAK/C,IAAEwD,SAAS5D,GACZ,uEAAsBA,EAAOmD,O,GAPdF,GAarBa,E,kDACF,aAAe,uCACL,U,4CAGV,SAAU9D,EAAOmD,GACb,IAAK/C,IAAEqD,SAASzD,GACZ,uEAAsBA,EAAOmD,O,GAPhBF,GAanBpD,EAAQ,CACV,IAAIwD,EACJ,IAAIG,EACJ,IAAIG,EACJ,IAAIE,EACJ,IAAIC,GAGD,SAASC,EAAgB5E,GAC5B,OAAOU,EAAMmE,MAAK,SAAAC,GAAC,OAAIA,EAAE9E,OAASA,K,aCtFjB+E,G,WACjB,WAAaC,EAAMC,GAAS,oBACxBlB,KAAKiB,KAAOA,EACZjB,KAAKkB,QAAUA,E,wCAYnB,WACI,OAAOlB,KAAKiB,KAAO,KAAOjB,KAAKiB,MAAQ,O,4BAV3C,SAAsBE,GAClB,OAAIA,EAAMC,gBAAwBD,EAAMC,gBACjC,IAAIJ,EAAgB,IAAKG,EAAMlB,SAAWoB,KAAKC,UAAUH,M,sBAGpE,SAAiBD,GACb,OAAO,IAAIF,EAAgB,IAAKE,O,KAQxCF,GAAgBO,kBAAoB,IAAIP,GAAgB,IAAK,6BAC7DA,GAAgBQ,qBAAuB,IAAIR,GAAgB,IAAK,kCAChEA,GAAgBS,GAAK,IAAIT,GAAgB,K,ICrBpBU,G,kDACjB,WAAaT,EAAMhB,GAAS,kCACxB,cAAMA,IACD0B,KAAO,uBACZ,EAAKV,KAAOA,EAEZ,EAAKG,gBAAkB,IAAIJ,GAAgBC,EAAMhB,GALzB,E,uBADkB2B,QCE7BC,G,WACjB,aAAe,oBACX7B,KAAK8B,KAAO,G,wCAGhB,SAAMH,EAAM1F,EAAM8F,GACd/B,KAAK8B,KAAKH,GAAQ,CAAE1F,KAAM4E,EAAe5E,GAAO8F,gBAChD/B,KAAK2B,GAAgC,oBAAjBI,EAA8BA,IAAiBA,I,sBAGvE,WAAY,WACR7E,IAAE8E,QAAQhC,KAAK8B,MAAM,SAACA,EAAMH,GACxB,IAAM7E,EAAQ,EAAK6E,GACX1F,EAAS6F,EAAT7F,KACR,IAAIiB,IAAE+E,MAAMnF,GAAZ,CACA,IAAMqE,EAAQlF,EAAKoE,SAASvD,EAAd,UAAwB6E,EAAxB,uBACd,GAAIR,EACA,MAAM,IAAIO,GAAqB,IAAKP,W,KCnB/Be,G,kDACjB,aAAe,kCACX,gBACKC,KAAK,OAAQ,QAAQ,kBAAM,IAAIC,MAAOpF,iBAC3C,EAAKmF,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,WAAY,GAJvB,E,UADgCN,ICA9BQ,G,kDACjB,aAAe,kCACX,gBACKF,KAAK,OAAQ,QAAQ,kBAAM,IAAIC,MAAOpF,iBAC3C,EAAKmF,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,WAAY,GAJvB,E,UAD+BN,ICA7BS,G,kDACjB,aAAe,kCACX,gBACKH,KAAK,OAAQ,QAAQ,kBAAM,IAAIC,MAAOpF,iBAC3C,EAAKmF,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,WAAY,GAClC,EAAKA,KAAK,WAAY,SAAU,GALrB,E,UAD2BN,ICAzBU,G,kDACjB,aAAe,kCACX,gBACKJ,KAAK,OAAQ,QAAQ,kBAAM,IAAIC,MAAOpF,iBAC3C,EAAKmF,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,WAAY,GAClC,EAAKA,KAAK,WAAY,SAAU,GAChC,EAAKA,KAAK,gBAAiB,SAAU,GAN1B,E,UADgCN,ICA9BW,G,kDACjB,aAAe,kCACX,gBACKL,KAAK,OAAQ,UAFP,E,UAD4BN,ICA1BY,G,kDACjB,aAAe,kCACX,gBACKN,KAAK,KAAM,MAChB,EAAKA,KAAK,OAAQ,QAClB,EAAKA,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,YALX,E,UADgCN,ICA9Ba,G,kDACjB,aAAe,kCACX,gBACKP,KAAK,KAAM,MAChB,EAAKA,KAAK,OAAQ,QAClB,EAAKA,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,YALX,E,UAD+BN,ICA7Bc,G,kDACjB,aAAe,kCACX,gBACKR,KAAK,KAAM,MAChB,EAAKA,KAAK,OAAQ,QAClB,EAAKA,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,YACtB,EAAKA,KAAK,WAAY,UANX,E,UAD2BN,ICAzBe,G,kDACjB,aAAe,kCACX,gBACKT,KAAK,KAAM,MAChB,EAAKA,KAAK,OAAQ,QAClB,EAAKA,KAAK,cAAe,UACzB,EAAKA,KAAK,WAAY,YACtB,EAAKA,KAAK,WAAY,UACtB,EAAKA,KAAK,gBAAiB,UAPhB,E,UADgCN,ICA9BgB,G,WACjB,aAAe,oBACX7C,KAAKd,IAAM,G,sDAGf,SAAoBjD,EAAM6G,GACtB9C,KAAKd,IAAIjD,GAAQ+D,KAAKd,IAAIjD,GAAT,2BAAsB+D,KAAKd,IAAIjD,IAA/B,IAAsC6G,aAAa,CAAEA,c,oBAG1E,SAAQ7G,GACJ,IAAQ6G,EAAa9C,KAAKd,IAAIjD,GAAtB6G,SACR,OAAIA,GAIG9B,GAAgBQ,yB,KCfVuB,G,WACjB,aAAuD,6DAAJ,GAApC1E,EAAwC,EAAxCA,GAAIzB,EAAoC,EAApCA,KAAMoB,EAA8B,EAA9BA,YAAaN,EAAiB,EAAjBA,SAAiB,oBACnDsC,KAAK3B,GAAKA,GAAMwB,IAChBG,KAAKgD,QAAQpG,GACboD,KAAKiD,eAAejF,GACpBgC,KAAKkD,YAAYxF,G,kDAGrB,SAAgBM,GACZgC,KAAKhC,YAAcA,I,qBAGvB,SAASpB,GACLoD,KAAKpD,KAAOA,I,yBAGhB,SAAac,GACTsC,KAAKtC,SAAWA,M,KCjBHyF,G,kDACjB,aAAuB,IAAVC,EAAU,uDAAJ,GAAI,uCACbA,G,UAF8BL,ICQ5C,SAASM,GAAS3F,GACd,OAAOA,EAAW,GAGtB,SAAS4F,GAAO5F,GACZ,OAAOA,EAAW,KAGtB,SAAS6F,GAAItF,GACT,OAAOA,EAAW,I,ICnBDuF,G,kDACjB,WAAaC,EAASxD,GAAS,kCAC3B,wBAASwD,EAAT,mBAA2BxD,KACtB0B,KAAO,eAFe,E,uBADOC,QCKrB8B,G,kDACjB,aAAiE,+DAAJ,GAA9CrF,EAAkD,EAAlDA,GAAIzB,EAA8C,EAA9CA,KAAMoB,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,SAAiB,4BAC7D,cAAM,CAAEW,KAAIzB,OAAMoB,cAAaN,cAC1BiG,WAAW,CAAE1F,WAAUP,aAFiC,E,yCAKjE,SAAOzB,GACH,IAAM2H,EFXP,SAAgBlG,EAAUO,GAAyB,IAAfhC,EAAe,uDAAR,OAC9C,MAAa,WAATA,EACOoH,GAAQ3F,GAAY6F,GAAGtF,GACd,SAAThC,EACAsH,GAAGtF,GAAYqF,GAAM5F,QADzB,EEQYmG,CAAM7D,KAAKtC,SAAUsC,KAAK/B,SAAUhC,GACnD,GAAI2H,EAAQ,OAAOA,EACnB,MAAM,IAAIJ,GAAa,oBAAjB,eAA8CvH,EAA9C,iB,wBAGV,YAAoC,IAAtBgC,EAAsB,EAAtBA,SAAUP,EAAY,EAAZA,SACpBsC,KAAK/B,SAAWA,EAChB+B,KAAKtC,SAAWA,EAChBsC,KAAK7B,UAAYjB,IAAEyB,MAAMqB,KAAK6D,MAAM,QAAS,GAC7C7D,KAAK5B,SAAWlB,IAAEyB,MAAMqB,KAAK6D,MAAM,UAAW,O,GAhBZd,ICHrBe,G,kDACjB,aAAuB,IAAVV,EAAU,uDAAJ,GAAI,uCACbA,G,UAF0BM,I,8BCAnBK,G,kDACjB,aAA6C,+DAAJ,GAA1B7F,EAA8B,EAA9BA,cAAkBkF,EAAY,+CACzC,cAAMA,IACDY,iBAAiB9F,GAFmB,E,oDAK7C,SAAkBA,GACd8B,KAAK9B,cAAgBA,M,GAPgBwF,ICAxBO,G,kDACjB,aAAuB,IAAVb,EAAU,uDAAJ,GAAI,uCACbA,G,UAF+BL,I,SCCvCmB,ICFKC,EAAQ,I,WDGf,WAAaC,EAAYC,GAAU,oBAC/BrE,KAAKoE,WAAaA,EAClBpE,KAAKqE,SAAWA,E,wCAGpB,YACKrE,KAAKqE,UAAYrE,KAAKoE,WAAWE,S,qBAGtC,YACKtE,KAAKqE,UAAYrE,KAAKoE,WAAWG,Y,oBAGtC,SAAQjF,IACHU,KAAKqE,UAAYrE,KAAKoE,WAAWI,OAAOlF,K,oBAG7C,SAAQA,IACHU,KAAKqE,UAAYrE,KAAKoE,WAAWK,OAAOnF,K,oBAG7C,SAAQA,IACHU,KAAKqE,UAAYrE,KAAKoE,WAAWM,OAAOpF,K,qBAG7C,SAASjB,GACL2B,KAAKoE,WAAWO,QAAQtG,O,MAIXuG,G,WACjB,WAAaR,GAAkC,IAAtBS,EAAsB,uDAAd,GAAIC,EAAU,2DAC3C9E,KAAKoE,WAAaA,EAClBpE,KAAK6E,MAAQA,EACb7E,KAAK8E,SAAWA,E,iDAGpB,WAA6B,IAAdC,EAAc,uDAAJ,GACbC,EAAkBD,EAAlBC,cACR,MAAO,CACHA,cAAeA,GAAiBnF,IAChCoF,YAAa,IAAIf,GAAmBlE,KAAKoE,WAAYpE,KAAK8E,SAAST,a,sBAI3E,SAAUa,EAASH,GACfG,EAAQ7E,a,6BAGZ,SAAiB6E,EAASH,M,mBAG1B,SAAOG,EAASH,M,kBAGhB,SAAMG,EAASH,GACXA,EAAQE,YAAYX,S,qBAGxB,SAASY,EAASC,GACd,IAAMJ,EAAU/E,KAAKoF,cAAcD,GACnC,IACInF,KAAKqF,gBAAgBH,EAASH,GAC9B/E,KAAK6E,MAAMQ,iBAAmBrF,KAAK6E,MAAMQ,gBAAgBH,EAASH,GAElE/E,KAAKK,SAAS6E,EAASH,GACvB/E,KAAK6E,MAAMxE,UAAYL,KAAK6E,MAAMxE,SAAS6E,EAASH,GAEpD,IAAMO,EAAWtF,KAAK6E,MAAMU,MACtBvF,KAAK6E,MAAMU,MAAML,EAASH,GAC1B/E,KAAKuF,MAAML,EAASH,GAK1B,OAHA/E,KAAK6E,MAAMW,YAAcxF,KAAK6E,MAAMW,WAAWN,EAASH,GACxD/E,KAAKsE,KAAKY,EAASH,GAEZ/D,GAAgByE,SAASH,GAClC,MAAOnE,GAEL,OADA4D,EAAQE,YAAYV,UACbvD,GAAgB0E,cAAcvE,Q,KE9E5BwE,G,kDACjB,aAKU,MALGb,EAKH,uDALc,CACpBc,WAAW,EACXC,MAAO3I,IAAE4I,SAAS,MAClBtB,OAAQtH,IAAE6I,KACVC,WAAY9I,IAAE6I,MACflB,EAAO,mEACN,cAAMC,EAASkB,aAAcnB,IACxBC,SAAWA,EAFV,E,mDAKV,SAAiBI,EAASH,GAEtB,GADA,uEAAsBG,EAASH,GAC3B/E,KAAK8E,SAASc,UACdb,EAAQkB,UAAYjG,KAAK8E,SAASN,OAAOU,OACtC,CACH,IAAMgB,EAAclG,KAAK8E,SAASe,MAAMX,GAClCe,EAAYjG,KAAKoE,WAAWO,QAAQuB,GAC1CnB,EAAQkB,UAAYjG,KAAK8E,SAASN,OAAOyB,M,sBAIjD,SAAUf,EAASH,GAEf,GADA,gEAAeG,EAASH,IACnBA,EAAQkB,UACT,MAAM,IAAIvE,GAAqB,IAAK,sB,kBAI5C,SAAMwD,EAASH,GACP/E,KAAK8E,SAASc,UACdb,EAAQE,YAAYT,OAAOO,EAAQkB,WAC5BjG,KAAK8E,SAASJ,OACrBK,EAAQE,YAAYP,OAAOK,EAAQkB,WAEnClB,EAAQE,YAAYR,OAAOM,EAAQkB,WAEvC,4DAAWf,EAASH,K,mBAGxB,SAAOG,EAASH,GACZ,OAAOA,EAAQkB,c,GAzCwBrB,ICCzCuB,G,WACF,WAAaC,GAAgB,oBACzBpG,KAAKoG,eAAiBA,EACtBpG,KAAKqG,cAAgB,SAACtB,GAAD,OAAa,IAAIH,GAAQG,EAAQuB,gBAAgBN,aAAcjB,EAAQF,MAAOE,EAAQuB,kB,qDAG/G,WAGI,OAFAtG,KAAKsG,gBAAkB,CAAEV,WAAW,GACpC5F,KAAKqG,cAAgB,SAACtB,GAAD,OAAa,IAAIY,GAAkBZ,EAAQuB,gBAAiBvB,EAAQF,QAClF7E,O,+BAGX,WAGI,OAFAA,KAAKsG,gBAAkB,CAAE5B,QAAQ,EAAMmB,MAAO,SAACX,GAAD,OAAaA,EAAQ7G,KACnE2B,KAAKqG,cAAgB,SAACtB,GAAD,OAAa,IAAIY,GAAkBZ,EAAQuB,gBAAiBvB,EAAQF,QAClF7E,O,+BAGX,WAGI,OAFAA,KAAKsG,gBAAkB,CAAEV,WAAW,EAAOC,MAAO,SAACX,GAAD,OAAaA,EAAQ7G,KACvE2B,KAAKqG,cAAgB,SAACtB,GAAD,OAAa,IAAIY,GAAkBZ,EAAQuB,gBAAiBvB,EAAQF,QAClF7E,O,sBAGX,WAEI,OADAA,KAAKsG,gBAAL,2BAA4BtG,KAAKsG,iBAAjC,IAAkDjC,UAAU,IACrDrE,O,wBAGX,SAAY/D,GAER,OADA+D,KAAKoG,eAAeG,gBAAgBtK,EAAM+D,MACnCA,O,oBAGX,SAAQwE,GAEJ,OADAxE,KAAKsG,gBAAkBpJ,IAAEsJ,MAAMxG,KAAKsG,gBAAiB,CAAE9B,WAChDxE,O,sBAGX,SAAU6F,GAEN,OADA7F,KAAKsG,gBAAkBpJ,IAAEsJ,MAAMxG,KAAKsG,gBAAiB,CAAET,UAChD7F,O,wBAGX,SAAY/D,GAAM,WAId,OAHA+D,KAAKsG,gBAAkBpJ,IAAEsJ,MAAMxG,KAAKsG,gBAAiB,CACjDN,WAAY,kBAAM,EAAKI,eAAeK,cAAcjC,OAAOvI,MAExD+D,O,mBAGX,SAAOuF,GAEH,OADAvF,KAAK6E,MAAQ3H,IAAEsJ,MAAMxG,KAAK6E,MAAO,CAAEU,UAC5BvF,S,KAIF0G,GAAb,WACI,WAAaD,GAAe,oBACxBzG,KAAK2G,SAAW,GAChB3G,KAAKyG,cAAgBA,EAH7B,mDAMI,SAAiBxK,EAAM2K,GACnB3K,EAAK4K,SAAW7G,KAChBA,KAAK2G,SAAS1K,GAAQ+D,KAAK2G,SAAS1K,GAAd,2BAA2B+D,KAAK2G,SAAS1K,IAAzC,IAAgD2K,iBAAiB,CAAEA,kBARjG,qBAWI,SAAS1B,GACL,IAAQ0B,EAAiB5G,KAAK2G,SAASG,OAAOC,eAAe7B,GAAS8B,aAA9DJ,aACR,OAAIA,EAAaI,cAAgBb,GACbS,EAAaP,cAAcO,GAC5BK,QAAQ/B,GAChB0B,EACS,IAAIA,EAAa,CAAEH,cAAezG,KAAKyG,gBACxCQ,QAAQ/B,GAGpBlE,GAAgBO,oBArB/B,2BAwBI,WACI,OAAO,IAAI4E,GAAqBnG,UAzBxC,KC5DqBkH,G,kDACjB,aAAe,kCACX,gBACK/E,KAAK,KAAM,MAFL,E,UAD+BN,ICA7BsF,G,kDACjB,aAAe,kCACX,gBACKhF,KAAK,KAAM,MAFL,E,UAD2BN,ICAzBuF,G,kDACjB,aAAe,kCACX,gBACKjF,KAAK,KAAM,MAFL,E,UADgCN,ICA9BwF,G,kDACjB,aAAe,kCACX,gBACKlF,KAAK,KAAM,MAFL,E,UADgCN,ICyBtC4E,GAAgB,IAAI5D,GACpBuD,GAAiB,IAAIM,GAAeD,IAyBjD,SAASa,GAA4BC,GACjCA,EACKlB,gBACAmB,oBACAC,WAAWpF,IACX/C,QAAO,SAAA8D,GAAG,OAAI,IAAID,GAAeC,MACjCgB,WAAW5E,GAEhB+H,EACKlB,gBACAqB,oBACAD,WAAWP,IACX9C,WAAW5E,GAEhB+H,EACKlB,gBACAsB,oBACAF,WAAW/E,IACXpD,QAAO,SAAA8D,GAAG,OAAI,IAAID,GAAeC,MACjCgB,WAAW5E,GACX+F,OAAM,SAACL,EAASH,GAIb,OAHAG,EAAQtI,MAAQmI,EAAQkB,UAAUjD,QAAQkC,EAAQtI,MAClDsI,EAAQlH,aAAe+G,EAAQkB,UAAUhD,eAAeiC,EAAQlH,aAChEkH,EAAQxH,UAAYqH,EAAQkB,UAAU/C,YAAYgC,EAAQxH,UACnDqH,EAAQkB,aAI3B,SAAS2B,GAA6BL,GAClCA,EACKlB,gBACAmB,oBACAC,WAAWlF,IACXjD,QAAO,SAAA8D,GAAG,OAAI,IAAIW,GAAgBX,MAClCgB,WAAW1E,GAEhB6H,EACKlB,gBACAqB,oBACAD,WAAWL,IACXhD,WAAW1E,GAEhB6H,EACKlB,gBACAsB,oBACAF,WAAW7E,IACXtD,QAAO,SAAA8D,GAAG,OAAI,IAAIW,GAAgBX,MAClCgB,WAAW1E,GACX6F,OAAM,SAACL,EAASH,GASb,OARAG,EAAQtI,MAAQmI,EAAQkB,UAAUjD,QAAQkC,EAAQtI,MAClDsI,EAAQlH,aAAe+G,EAAQkB,UAAUhD,eAAeiC,EAAQlH,aAChEkH,EAAQhH,eAAiB6G,EAAQkB,UAAUjC,iBAAiBkB,EAAQhH,gBACnEgH,EAAQjH,UAAYiH,EAAQxH,WAAaqH,EAAQkB,UAAUtC,WACxDzG,IAAEsJ,MACE,CAAEvI,SAAU8G,EAAQkB,UAAUhI,SAAUP,SAAUqH,EAAQkB,UAAUvI,UACpE,CAAEO,SAAUiH,EAAQjH,SAAUP,SAAUwH,EAAQxH,YAEjDqH,EAAQkB,aAI3B,SAAS4B,GAAwBN,GAC7BA,EACKlB,gBACAmB,oBACAC,WAAWnF,IACXhD,QAAO,SAAA8D,GAAG,OAAI,IAAIU,GAAWV,MAC7BgB,WAAW3E,GAEhB8H,EACKlB,gBACAqB,oBACAD,WAAWN,IACX/C,WAAW3E,GAEhB8H,EACKlB,gBACAsB,oBACAF,WAAW9E,IACXrD,QAAO,SAAA8D,GAAG,OAAI,IAAIU,GAAWV,MAC7BgB,WAAW3E,GACX8F,OAAM,SAACL,EAASH,GAQb,OAPAG,EAAQtI,MAAQmI,EAAQkB,UAAUjD,QAAQkC,EAAQtI,MAClDsI,EAAQlH,aAAe+G,EAAQkB,UAAUhD,eAAeiC,EAAQlH,cAC/DkH,EAAQjH,UAAYiH,EAAQxH,WAAaqH,EAAQkB,UAAUtC,WACxDzG,IAAEsJ,MACE,CAAEvI,SAAU8G,EAAQkB,UAAUhI,SAAUP,SAAUqH,EAAQkB,UAAUvI,UACpE,CAAEO,SAAUiH,EAAQjH,SAAUP,SAAUwH,EAAQxH,YAEjDqH,EAAQkB,aAI3B,SAAS6B,GAA6BP,GAClCA,EACKlB,gBACAmB,oBACAC,WAAWvF,IACX5C,QAAO,SAAA8D,GAAG,OAAI,IAAIa,GAAgBb,MAClCgB,WAAW7E,GAEhBgI,EACKlB,gBACAqB,oBACAD,WAAWJ,IACXjD,WAAW7E,GAEhBgI,EACKlB,gBACAsB,oBACAF,WAAWhF,IACXnD,QAAO,SAAA8D,GAAG,OAAI,IAAIa,GAAgBb,MAClCgB,WAAW7E,GACXgG,OAAM,SAACL,EAASH,GAIb,OAHAG,EAAQtI,MAAQmI,EAAQkB,UAAUjD,QAAQkC,EAAQtI,MAClDsI,EAAQlH,aAAe+G,EAAQkB,UAAUhD,eAAeiC,EAAQlH,aAChEkH,EAAQxH,UAAYqH,EAAQkB,UAAU/C,YAAYgC,EAAQxH,UACnDqH,EAAQkB,aCzJpB,SAAS8B,GAAKC,EAAKC,EAAQ/G,GAC9B,OAAO,IAAIgH,SAAQ,SAACC,EAASC,GACzB,GAAe,SAAXH,EAAmB,CACnB,GAAY,yBAARD,EAAgC,CAChC,IAAM9C,EAAU,IAAI5C,GAEpB,YADA6F,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,yBAAR8G,EAAgC,CAChC,IAAM9C,EAAU,IAAI7C,GAEpB,YADA8F,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,0BAAR8G,EAAiC,CACjC,IAAM9C,EAAU,IAAIhD,GAEpB,YADAiG,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,0BAAR8G,EAAiC,CACjC,IAAM9C,EAAU,IAAI3C,GAEpB,YADA4F,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,MAIxD,GAAe,QAAX+G,EAAkB,CAClB,GAAY,yBAARD,EAAgC,CAChC,IAAM9C,EAAU,IAAIvC,GAEpB,YADAwF,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,yBAAR8G,EAAgC,CAChC,IAAM9C,EAAU,IAAIxC,GAEpB,YADAyF,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,0BAAR8G,EAAiC,CACjC,IAAM9C,EAAU,IAAIzC,GAEpB,YADA0F,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,KAGpD,GAAY,0BAAR8G,EAAiC,CACjC,IAAM9C,EAAU,IAAItC,GAEpB,YADAuF,EAAQ/B,GAAea,QAAQ/J,IAAEsJ,MAAMtB,EAAShE,MAIxD,GAAe,QAAX+G,GACID,EAAIK,WAAW,uBAAwB,CACvC,IAAMnD,EAAU,IAAI1C,GAGpB,OAFA0C,EAAQtF,KAAO1C,IAAEO,SAASuK,EAAIM,UAAU,sBAAsBC,cAC9DJ,EAAQ/B,GAAea,QAAQ/B,IAIvCkD,EAAO,IAAIxG,MAAM,uBAIlB,IAAM4G,GAAe,CACxB/L,QAAS+C,EACTxD,QAASyD,EACTpD,SAAUqD,EACVnD,SAAUgD,EACVkJ,SAAU9I,GAED+I,GAAqB,SAACzM,EAAM6G,GAAP,OAAoB2D,GAAciC,mBAAmBzM,EAAM6G,IAEhF6F,GD/CN,WAAkD,IAArBpB,EAAqB,uDAAhBnB,GACrCmB,EACKlB,gBACAhC,WACAoD,WAAWjF,IACX4B,WAAWzE,GACX4F,OAAM,SAACL,EAASH,GACb,OAAOA,EAAQE,YAAYb,WAAWwE,aAAa1D,EAAQtF,SAGnEiI,GAAuBN,GACvBK,GAA4BL,GAC5BD,GAA2BC,GAC3BO,GAA4BP,IE5CjBsB,GAJE,WACb,MAAO,CAAEd,S,MCGE,SAASe,KACtB,IAAQf,EAAQc,KAARd,IACR,EAAgCgB,mBAAS,IAAzC,mBAAON,EAAP,KAAiBO,EAAjB,KAQA,OANAC,qBAAU,WACRlB,EAAI,sBAAwBhL,MAAS6C,OAAQ,OAAOpE,MAAK,SAAC8J,GAAD,OACvD0D,EAAY1D,EAASpE,cAEtB,CAAC6G,IAGF,oBAAI9I,UAAU,aAAd,SACGwJ,EAASvJ,KAAI,SAACgK,EAAG/J,GAAJ,OACZ,cAAC,EAAD,eAAsB+J,GAAP/J,Q,4BCfR,SAASgK,GAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAAwBL,oBAAS,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKrK,UAAU,aAAf,UACE,cAAC,KAAD,CAAQsK,QAAS,kBAAMD,GAAQ,SAAChM,GAAD,OAAQA,QACtC+L,GAAQ,qBAAKpK,UAAU,mBAAf,SAAmCmK,O,MCNnC,SAASI,GAAT,GAAoC,IAApBrN,EAAmB,EAAnBA,KAAMsN,EAAa,EAAbA,KAAMzB,EAAO,EAAPA,IACzC,OACE,sBAAK/I,UAAU,qBAAf,UACE,cAAC9C,EAAD,CAAMuN,MAAOD,IACb,mBAAGE,KAAM3B,EAAT,SAAeyB,O,MCErB,SAASG,KACP,OACE,mCACG1M,IAAEgC,IAAInD,GAAY,SAAC8N,EAAKxL,GAAN,OACjB,cAAC,GAAD,CAEElC,KAAM0N,EAAI1N,KACV6L,IAAKlM,EAAO,WAAOuC,GACnBoL,KAAMI,EAAI3N,OAHLmC,QAUA,SAASyL,KACtB,OACE,sBAAK7K,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,KAAD,MAEF,qBAAKA,UAAU,uBAAf,SACE,cAAC2K,GAAD,MAEF,qBAAK3K,UAAU,sBAAf,SACE,eAAC,GAAD,WACE,qBAAKA,UAAU,4BAAf,SACE,cAAC2K,GAAD,MAEF,uBACA,cAAC,GAAD,CAAMzN,KAAM4N,KAAY/B,IAAKlM,EAAO,YAAgB2N,KAAK,qBC1BpDO,OATf,WACE,OACE,sBAAK/K,UAAU,8BAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,sCCNS,SAASgL,GAAT,GAA6D,IAA5C5L,EAA2C,EAA3CA,GAAInC,EAAuC,EAAvCA,MAAOgO,EAAgC,EAAhCA,YAAapN,EAAmB,EAAnBA,MAAOqN,EAAY,EAAZA,SAC7D,OACE,sBAAKlL,UAAU,YAAf,UACE,uBAAOmL,QAAS/L,EAAhB,SAAqBnC,IACrB,uBACEgO,YAAaA,EACb7L,GAAIA,EACJvB,MAAOA,EACPqN,SAAUA,O,MCFlB,SAASE,GAAT,GAA6B,IAATpO,EAAQ,EAARA,KACZE,EAAOJ,EAAWE,GAAME,KAC9B,OACE,sBAAK8C,UAAU,iBAAf,UACG,cAAC9C,EAAD,IACD,uDAKN,SAASmO,GAAT,GAA4C,IAAhBrO,EAAe,EAAfA,KAAMsO,EAAS,EAATA,MAC1BC,EAAWC,cACjB,EAAkC1B,qBAAlC,mBAAO2B,EAAP,KAAkBC,EAAlB,KACA,EAA0B5B,mBACxB7L,IAAE0N,OACAL,GACA,SAACM,EAAKC,GAAN,mBAAC,eACID,GADL,mBAEGC,EAAIlN,EAAckN,GAAGhN,sBAExB,KAPJ,mBAAOiN,EAAP,KAAcC,EAAd,KAUQjD,EAAQc,KAARd,IAEFkD,EAAY,yCAAG,WAAOC,GAAP,kBAAAC,EAAA,6DACnBD,EAAME,iBACAlK,EAAUhE,IAAE0N,OAChBL,GACA,SAACM,EAAKC,GAAN,mBAAC,eACID,GADL,mBAEGC,EAAIlN,EAAckN,GAAG7O,KAAKY,WAAWkO,EAAMD,QAE9C,IARiB,SAUE/C,EAAI,QAAU9L,EAAO,WAAY,OAAQiF,GAV3C,QAUb0C,EAVa,QAWR3C,MAAQ,KAAO2C,EAAO3C,KAAO,IACtCuJ,EAAS1O,EAAU,KAEnB6O,EAAa,CAAEU,QAAQ,EAAOpL,QAAS2D,EAAO1C,UAd7B,2CAAH,sDA2BlB,OATA+H,qBAAU,WACR,IAAIqC,OAAeC,EACnB,GAAIb,EAAW,CACb,IAAMc,EAAYC,YAAW,kBAAMd,OAAaY,KAAY,KAC5DD,EAAe,kBAAMI,aAAaF,IAEpC,OAAOF,IACN,CAACZ,IAGF,uBAAMzL,UAAU,2BAA2B0M,SAAUV,EAArD,UACGV,EAAMrL,KAAI,SAAC4L,GACV,MAAoClN,EAAckN,GAA1C5O,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,iBACf,OACE,cAACoM,GAAD,CAEE5L,GAAIyM,EACJ5O,MAAOA,EACPY,MAAOiO,EAAMD,GACbX,SAAU,SAACyB,GAAD,OACRZ,GAAS,SAAC1N,GAAD,mBAAC,eAAYA,GAAb,mBAAiBwN,EAAIc,EAAIC,OAAO/O,YAE3CoN,YAAarM,GAPRiN,MAWX,qBAAK7L,UAAU,cAAf,SACE,uBAAOhD,KAAK,SAASa,MAAM,eAE5B4N,GAAaA,EAAUW,QAAU,2CACjCX,IAAcA,EAAUW,QAAU,8BAAMX,EAAUzK,aAK1C,SAAS6L,GAAT,GAAsC,IAAhB7P,EAAe,EAAfA,KAAMsO,EAAS,EAATA,MACzC,OACE,sBAAKtL,UAAW,qCAAhB,UACE,cAACoL,GAAD,CAAUpO,KAAMA,IAChB,cAACqO,GAAD,CAAkBrO,KAAMA,EAAMsO,MAAOA,OCvF5B,SAASwB,KACtB,OACE,cAAC,GAAD,CACE9P,KAAK,UACLsO,MAAO,CAAC,OAAQ,cAAe,WAAY,c,ICP5ByB,G,WACjB,WAAcrK,GAAO,oBACjB3B,KAAK2B,KAAOA,EACZ3B,KAAKiM,MAAQ,G,2CAGjB,WACI,IAAMC,EAAUC,aAAaC,QAAQpM,KAAK2B,MAC1C,OAAIuK,EACG7K,KAAKgL,MAAMH,GADE,K,kBAIxB,WACI,GAA0B,IAAtBlM,KAAKiM,MAAM1D,OAAf,CAEA,IAAI+D,EAAOtM,KAAKuM,UAEVC,EAAMxM,KAAKiM,MAAM/M,KAAI,SAAAuN,GAAC,OAAIA,EAAEpO,MAClCiO,EAAI,uBAAOA,EAAKI,QAAO,SAAAD,GAAC,OAAKD,EAAIG,SAASF,EAAEpO,QAAxC,aAAiD2B,KAAKiM,QAE1DE,aAAaS,QAAQ5M,KAAK2B,KAAMN,KAAKC,UAAUgL,O,qBAGnD,WACItM,KAAKiM,MAAQ,K,oBAGjB,SAAQ3M,GACJU,KAAKiM,MAAMY,KAAKvN,K,oBAGpB,SAAQA,GACQU,KAAKiM,MAAMnL,MAAK,SAAA2L,GAAC,OAAIA,EAAEpO,KAAOiB,EAAOjB,QAE7C2B,KAAKiM,MAAQjM,KAAKiM,MAAMS,QAAO,SAAAD,GAAC,OAAIA,EAAEpO,KAAOiB,EAAOjB,OAExD2B,KAAKiM,MAAMY,KAAKvN,K,qBAGpB,SAASjB,GACL,IAAIiB,EAASU,KAAKiM,MAAMnL,MAAK,SAAA2L,GAAC,OAAIA,EAAEpO,KAAOA,KAC3C,OAAIiB,KAIJA,EAFaU,KAAKuM,UAEJzL,MAAK,SAAA2L,GAAC,OAAIA,EAAEpO,KAAOA,OAE7B2B,KAAKiM,MAAMY,KAAKvN,GAEbA,O,KC7CMwN,G,WACjB,aAAiB,oBACb9M,KAAK+M,MAAQ,G,mDAGjB,SAAgBpL,GACZ3B,KAAK+M,MAAMF,KAAKlL,K,0BAGpB,SAAc/B,GACV,IAAIgE,EAAS,GASb,OAPA5D,KAAK+M,MAAM/K,SAAQ,SAAA/F,GACf,IAAM+Q,EAAQ,IAAIhB,GAAuB/P,GAAMsQ,UAC1CG,QAAO,SAAApP,GAAC,OAAIP,IAAOO,EAAEV,MAAMgD,SAAWA,KACtCV,KAAI,SAAA5B,GAAC,kCAASA,GAAT,IAAYrB,YACtB2H,EAAM,uBAAQA,GAAR,aAAmBoJ,OAGtB9P,IAAE+P,QAAQ/P,IAAEgQ,OAAOtJ,EAAO,CAAC,c,KCpB3B,SAASuJ,KACtB,OACE,cAAC,GAAD,CACElR,KAAK,WACLsO,MAAO,CAAC,OAAQ,cAAe,gBAAiB,WAAY,cCJnD,SAAS6C,KACtB,OACE,cAAC,GAAD,CAAYnR,KAAK,WAAWsO,MAAO,CAAC,OAAQ,cAAe,cCFhD,SAAS8C,KACtB,OACE,cAAC,GAAD,CAAYpR,KAAK,UAAUsO,MAAO,CAAC,OAAQ,cAAe,c,aCCxDjM,I,MAAO,CACX,OACA,OACA,cACA,WACA,WACA,gBACA,OAGF,SAASgP,KACP,MAAsCvE,mBAAS,IAA/C,mBAAOwE,EAAP,KAAoBC,EAApB,KACQzF,EAAQc,KAARd,IACF0F,EAAYC,mBA4BlB,OAPAzE,qBAAU,WACJsE,EAAYI,UACdF,EAAUG,QAAQC,QAClBL,EAAe,OAEhB,CAACD,EAAYI,UAGd,qCACE,wBAAQpE,QA5BS,WACnBxB,EAAI,sBAAwBhL,MAAS6C,OAAQ,OAAOpE,MAAK,SAAC8J,GACxD,IAAMmD,EAAWnD,EAASpE,QAC1B,GAAwB,IAApBuH,EAASF,OAAb,CACA,IACIoF,EACF,gCAFarP,GAAKC,KAAK,KAAO,MAI9BkK,EACGvJ,KAAI,SAAC5B,GAAD,OACHgB,GAAKY,KAAI,SAAC4O,GAAD,OAAOlQ,EAAckQ,GAAG7R,KAAKgB,WAAWK,EAAEwQ,OAAKvP,KAAK,QAE9DA,KAAK,MACJwP,EACJ,mBAAqBhR,MAASgB,OAAO,cAAgB,OAEvDyP,EAAe,CAAEG,UAASI,kBAY1B,yBACA,mBACEC,IAAKP,EACLxO,UAAU,mBACV0K,KAAM4D,EAAYI,QAClBM,SAAUV,EAAYQ,SAJxB,kCAYN,SAASG,GAAiBzE,GACxB,IAAM0E,EAAQ1E,EAAK2E,MAAM,MACnBC,EAASF,EAAMG,QAAQF,MAAM,KACnC,OAAOD,EAAMjP,KAAI,SAACqP,GAGhB,IAFA,IAAM3K,EAAS,GACT4K,EAASD,EAAKH,MAAM,KACjBjP,EAAI,EAAGA,EAAIkP,EAAO9F,OAAQpJ,IACjCyE,EAAOyK,EAAOlP,IAAMvB,EAAcyQ,EAAOlP,IAAIlD,KAAKmB,aAAaoR,EAAOrP,IAExE,OAAOyE,KAIX,SAAS6K,KACP,MAAgC1F,oBAAS,GAAzC,mBAAO2F,EAAP,KAAiBC,EAAjB,KACA,EAAwB5F,mBAAS,IAAjC,mBAAOU,EAAP,KAAamF,EAAb,KACA,EAA4B7F,mBAAS,IAArC,mBAAO8F,EAAP,KAAeC,EAAf,KACQ/G,EAAQc,KAARd,IAEFgH,EAAkB,yCAAG,mCAAA5D,EAAA,yDACpBuD,EADoB,iBAEjBjG,EAAWyF,GAAiBzE,GAFX,eAGDhB,GAHC,gEAGZuG,EAHY,2BAKbjH,EACJ,QAAUiH,EAAQ/S,KAAO,WACzB+S,EAAQ3Q,GAAK,MAAQ,OACrB2Q,GARiB,0DAWnBF,GAAU,SAACrC,GAAD,6BAAWA,GAAX,WAXS,+IAcvBkC,GAAY,GAdW,wBAgBvBA,GAAY,GACZG,EAAU,IAjBa,uEAAH,qDAqBxB,OACE,sBAAK7P,UAAU,yBAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,wBAAQsK,QAASwF,EAAjB,SACGL,EAAW,cAAgB,oBAE5BA,GACA,wBACEnF,QAAS,WACPoF,GAAY,GACZG,EAAU,KAHd,+BAUFJ,GACA,0BACE5R,MAAO2M,EACPU,SAAU,SAACyB,GAAD,OAASgD,EAAQhD,EAAIC,OAAO/O,QACtCoN,YAAY,wBAGf2E,EAAOtG,OAAS,GACf,qBAAKtJ,UAAU,+BAAf,SACG4P,EAAO3P,KAAI,SAAC+P,EAAK9P,GAAN,OACV,4BAAYkC,KAAKC,UAAU2N,IAAnB9P,WAiBL+P,OATf,WACE,OACE,sBAAKjQ,UAAU,kCAAf,UACE,cAACwP,GAAD,IACA,cAACnB,GAAD,QC/HFvQ,GAASoH,EAAQ,IACWA,EAAQ,GAExCgL,CAA0BpS,ICZX,WACXoF,KACA,IAAMiN,EAAqB,IAAItC,GAC/B5P,IAAE8E,QAAQwG,IAAc,SAACvM,EAAM0F,GACjB,aAAPA,EACC+G,GAAmBzM,EAAMmT,IAEzBA,EAAmBC,gBAAgB1N,GACnC+G,GAAmBzM,EAAM,IAAI+P,GAAuBrK,QDMhEgH,GAGA2G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAU3T,EAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4T,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC5D,GAAD,MAChC,cAAC,IAAD,CAAO2D,KAAK,YAAYC,QAAS,cAACxC,GAAD,MACjC,cAAC,IAAD,CAAOuC,KAAK,YAAYC,QAAS,cAACvC,GAAD,MACjC,cAAC,IAAD,CAAOsC,KAAK,WAAWC,QAAS,cAACtC,GAAD,MAChC,cAAC,IAAD,CAAOqC,KAAK,YAAYC,QAAS,cAAC,GAAD,aAIvCC,SAASC,eAAe,SAM1BxU,M","file":"static/js/main.afa92d36.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import _ from \"lodash\";\nimport moment from \"moment\";\nimport { FaMountain, FaRunning } from \"react-icons/fa\";\nimport { GiMountainClimbing } from \"react-icons/gi\";\nimport { MdFitnessCenter } from \"react-icons/md\";\n\nexport const urlBase = \"/goals-webiste\";\n\nexport const activities = {\n  running: {\n    type: \"running\",\n    label: \"Running\",\n    Icon: FaRunning,\n  },\n  trekking: {\n    type: \"trekking\",\n    label: \"Trekking\",\n    Icon: FaMountain,\n  },\n  climbing: {\n    type: \"climbing\",\n    label: \"Climbing\",\n    Icon: GiMountainClimbing,\n  },\n  fitness: {\n    type: \"fitness\",\n    label: \"Fitness\",\n    Icon: MdFitnessCenter,\n  },\n};\n\nfunction stringToCsv(s) {\n  return s.replaceAll(\",\", \"%%COMMA%%\").replaceAll(\"\\n\", \"%%NEW_LINE%%\");\n}\n\nfunction csvToString(s) {\n  return s.replaceAll(\"%%COMMA%%\", \",\").replaceAll(\"%%NEW_LINE%%\", \"\\n\");\n}\n\nexport const types = {\n  date: {\n    toApiValue: (value) => moment(value).toISOString(),\n    toCsvValue: _.identity,\n    fromCsvValue: _.identity,\n  },\n  string: {\n    toApiValue: _.identity,\n    toCsvValue: stringToCsv,\n    fromCsvValue: csvToString,\n  },\n  number: {\n    toApiValue: _.toNumber,\n    toCsvValue: _.identity,\n    fromCsvValue: _.toNumber,\n  },\n  duration: {\n    toApiValue: (value) => moment.duration(value).as(\"seconds\"),\n    toCsvValue: _.identity,\n    fromCsvValue: _.toNumber,\n  },\n};\n\nexport const activityProps = {\n  date: {\n    label: \"Date\",\n    inputPlaceholder: \"YYYY-MM-DD\",\n    createInitValue: () => moment().format(\"YYYY-MM-DD\"),\n    type: types.date,\n  },\n  description: {\n    label: \"Description\",\n    inputPlaceholder: \"describe the place or type of activity\",\n    createInitValue: () => \"\",\n    type: types.string,\n  },\n  duration: {\n    label: \"Duration\",\n    inputPlaceholder: \"HH:mm:ss\",\n    createInitValue: () => \"\",\n    type: types.duration,\n  },\n  distance: {\n    label: \"Distance\",\n    inputPlaceholder: \"18000\",\n    createInitValue: () => \"\",\n    type: types.number,\n  },\n  elevationGain: {\n    label: \"Elevation gain\",\n    inputPlaceholder: \"500\",\n    createInitValue: () => \"\",\n    type: types.number,\n  },\n  kmPerHour: {\n    label: \"Km/h\",\n    inputPlaceholder: \"Km per hour\",\n    createInitValue: () => \"\",\n    type: types.number,\n  },\n  minPerKm: {\n    label: \"min/Km\",\n    inputPlaceholder: \"minutes per Km\",\n    createInitValue: () => \"\",\n    type: types.number,\n  },\n  id: {\n    label: \"Identify\",\n    inputPlaceholder: \"Input an UUID\",\n    createInitValue: () => \"\",\n    type: types.string,\n  },\n  type: {\n    label: \"Session type\",\n    inputPlaceholder: _.keys(activities).join(\"/\"),\n    createInitValue: () => \"\",\n    type: types.string,\n  },\n};\n","import _ from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { BiTimer } from \"react-icons/bi\";\nimport { GiPathDistance } from \"react-icons/gi\";\nimport { TiArrowLoop } from \"react-icons/ti\";\nimport { SiSpeedtest } from \"react-icons/si\";\nimport \"./NewsItem.css\";\nimport { FaMountain } from \"react-icons/fa\";\nimport { activities } from \"../utils\";\n\nconst infoBuilder = {\n  running: ({ duration, distance, kmPerHour, minPerKm }) => [\n    {\n      Icon: BiTimer,\n      value: moment.duration(duration, \"s\").format(\"h:mm:ss\"),\n    },\n    {\n      Icon: GiPathDistance,\n      value: `${_.round(distance / 1000, 1)} Km`,\n    },\n    {\n      Icon: TiArrowLoop,\n      value: `${minPerKm} min/Km`,\n    },\n    {\n      Icon: SiSpeedtest,\n      value: `${kmPerHour} Km/h`,\n    },\n  ],\n  fitness: ({ duration }) => [\n    {\n      Icon: BiTimer,\n      value: moment.duration(duration, \"s\").format(\"h:mm:ss\"),\n    },\n  ],\n  climbing: ({ duration }) => [\n    {\n      Icon: BiTimer,\n      value: moment.duration(duration, \"s\").format(\"h:mm:ss\"),\n    },\n  ],\n  trekking: ({ duration, distance, elevationGain }) => [\n    {\n      Icon: FaMountain,\n      value: `${elevationGain} m`,\n    },\n    {\n      Icon: BiTimer,\n      value: moment.duration(duration, \"s\").format(\"h:mm\"),\n    },\n    {\n      Icon: GiPathDistance,\n      value: `${_.round(distance / 1000, 1)} Km`,\n    },\n  ],\n};\n\nexport default function NewsItem({\n  label,\n  description,\n  type,\n  distance,\n  date,\n  duration,\n  elevationGain,\n  kmPerHour,\n  minPerKm,\n}) {\n  const when = moment(date, \"YYYY-MM-DDTHH:mm.Z\").format(\"ll\");\n  const Icon = activities[type].Icon;\n  const info = infoBuilder[type]({\n    duration,\n    distance,\n    elevationGain,\n    kmPerHour,\n    minPerKm,\n  });\n  return (\n    <li className=\"goals-news-item\">\n      <div className=\"goals-news-item__header\">\n        <div className=\"goals-news-item__header-type\">\n          <Icon />\n          <p className=\"goals-news-item__header-label\">{label}</p>\n        </div>\n        <div className=\"goals-news-item__header-content\">\n          <p className=\"goals-news-item__header-description\">{description}</p>\n          <p className=\"goals-news-item__header-date\">{when}</p>\n        </div>\n      </div>\n      <ol className=\"goals-news-item__content\">\n        {info.map(({ Icon: InfoIcon, value }, i) => (\n          <li key={i} className=\"goals-news-item__content-item\">\n            <InfoIcon />\n            <p className=\"goals-news-item__header-label\">{value}</p>\n          </li>\n        ))}\n      </ol>\n    </li>\n  );\n}\n","export default class Repository {\r\n    save () {\r\n    }\r\n\r\n    dispose () {\r\n    }\r\n\r\n    create (entity) {\r\n    }\r\n\r\n    update (entity) {\r\n    }\r\n\r\n    getById (id) {\r\n        return undefined\r\n    }\r\n}\r\n","import Repository from '../../Repository'\r\n\r\nexport default class ClimbingSessionRepository extends Repository {\r\n\r\n}\r\n","import Repository from '../../Repository'\r\n\r\nexport default class FitnessSessionRepository extends Repository {\r\n\r\n}\r\n","import Repository from '../../Repository'\r\n\r\nexport default class RunSessionRepository extends Repository {\r\n\r\n}\r\n","import Repository from '../../Repository'\r\n\r\nexport default class TrekkingSessionRepository extends Repository {\r\n\r\n}\r\n","export default class ReadSessionsRepository {\n    getAllByYear (year) {\n        return []\n    }\n}\n","import { v4 as uuidv4, validate as validatev4 } from 'uuid'\r\n\r\nexport function uuid () {\r\n    return uuidv4()\r\n}\r\nexport function validate (value) {\r\n    return validatev4(value)\r\n}\r\n","import _ from 'lodash'\r\nimport { validate } from './data'\r\n\r\nclass DataType {\r\n    constructor (type) {\r\n        this.type = type\r\n    }\r\n\r\n    validate (value, message) {\r\n        return _.replace(message, '{{type}}', this.type)\r\n    }\r\n}\r\n\r\nclass IdType extends DataType {\r\n    constructor () {\r\n        super('id')\r\n    }\r\n\r\n    validate (value, message) {\r\n        if (!validate(value)) {\r\n            return super.validate(value, message)\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nclass DateType extends DataType {\r\n    constructor () {\r\n        super('date')\r\n    }\r\n\r\n    validate (value, message) {\r\n        if (!_.isString(value) || !/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/.test(value)) {\r\n            return super.validate(value, message)\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nclass NumberType extends DataType {\r\n    constructor () {\r\n        super('number')\r\n    }\r\n\r\n    validate (value, message) {\r\n        if (!_.isNumber(value)) {\r\n            return super.validate(value, message)\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nclass DurationType extends DataType {\r\n    constructor () {\r\n        super('duration')\r\n    }\r\n\r\n    validate (value, message) {\r\n        if (!_.isNumber(value)) {\r\n            return super.validate(value, message)\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nclass StringType extends DataType {\r\n    constructor () {\r\n        super('string')\r\n    }\r\n\r\n    validate (value, message) {\r\n        if (!_.isString(value)) {\r\n            return super.validate(value, message)\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst types = [\r\n    new IdType(),\r\n    new DateType(),\r\n    new NumberType(),\r\n    new DurationType(),\r\n    new StringType()\r\n]\r\n\r\nexport function createDataType (type) {\r\n    return types.find(t => t.type === type)\r\n}\r\n","\r\nexport default class CommandResponse {\r\n    constructor (code, payload) {\r\n        this.code = code\r\n        this.payload = payload\r\n    }\r\n\r\n    static createByError (error) {\r\n        if (error.commandResponse) return error.commandResponse\r\n        return new CommandResponse(500, error.message || JSON.stringify(error))\r\n    }\r\n\r\n    static createOk (payload) {\r\n        return new CommandResponse(200, payload)\r\n    }\r\n\r\n    isOk () {\r\n        return this.code < 300 && this.code >= 200\r\n    }\r\n}\r\n\r\nCommandResponse.UNDEFINED_HANDLER = new CommandResponse(500, 'undefined command handler')\r\nCommandResponse.UNDEFINED_REPOSITORY = new CommandResponse(500, 'undefined aggregate repository')\r\nCommandResponse.OK = new CommandResponse(200)\r\n","import CommandResponse from './CommandResponse'\r\n\r\nexport default class CommandResponseError extends Error {\r\n    constructor (code, message) {\r\n        super(message)\r\n        this.name = 'CommandResponseError'\r\n        this.code = code\r\n\r\n        this.commandResponse = new CommandResponse(code, message)\r\n    }\r\n}\r\n","import _ from 'lodash'\r\nimport { createDataType } from '../util/dataType'\r\nimport CommandResponseError from './CommandResponseError'\r\n\r\nexport default class Command {\r\n    constructor () {\r\n        this.meta = {}\r\n    }\r\n\r\n    init (name, type, defaultValue) {\r\n        this.meta[name] = { type: createDataType(type), defaultValue }\r\n        this[name] = typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n    }\r\n\r\n    validate () {\r\n        _.forEach(this.meta, (meta, name) => {\r\n            const value = this[name]\r\n            const { type } = meta\r\n            if (_.isNil(value)) return\r\n            const error = type.validate(value, `${name} is not a {{type}}`)\r\n            if (error) {\r\n                throw new CommandResponseError(400, error)\r\n            }\r\n        })\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class CreateClimbingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('date', 'date', () => new Date().toISOString())\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration', 0)\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class CreateFitnessSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('date', 'date', () => new Date().toISOString())\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration', 0)\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class CreateRunSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('date', 'date', () => new Date().toISOString())\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration', 0)\r\n        this.init('distance', 'number', 0)\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class CreateTrekkingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('date', 'date', () => new Date().toISOString())\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration', 0)\r\n        this.init('distance', 'number', 0)\r\n        this.init('elevationGain', 'number', 0)\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class ReadSessionByYear extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('year', 'number')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class UpdateClimbingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n        this.init('date', 'date')\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class UpdateFitnessSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n        this.init('date', 'date')\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class UpdateRunSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n        this.init('date', 'date')\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration')\r\n        this.init('distance', 'number')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class UpdateTrekkingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n        this.init('date', 'date')\r\n        this.init('description', 'string')\r\n        this.init('duration', 'duration')\r\n        this.init('distance', 'number')\r\n        this.init('elevationGain', 'number')\r\n    }\r\n}\r\n","import CommandResponse from '../service/CommandResponse'\r\n\r\nexport default class RepositoryMap {\r\n    constructor () {\r\n        this.map = {}\r\n    }\r\n\r\n    registerRepository (type, instance) {\r\n        this.map[type] = this.map[type] ? { ...this.map[type], instance } : { instance }\r\n    }\r\n\r\n    create (type) {\r\n        const { instance } = this.map[type]\r\n        if (instance) {\r\n            return instance\r\n        };\r\n\r\n        return CommandResponse.UNDEFINED_REPOSITORY\r\n    }\r\n}\r\n","import { uuid } from '../../util/data'\r\n\r\nexport default class Session {\r\n    constructor ({ id, date, description, duration } = {}) {\r\n        this.id = id || uuid()\r\n        this.setDate(date)\r\n        this.setDescription(description)\r\n        this.setDuration(duration)\r\n    }\r\n\r\n    setDescription (description) {\r\n        this.description = description\r\n    }\r\n\r\n    setDate (date) {\r\n        this.date = date\r\n    }\r\n\r\n    setDuration (duration) {\r\n        this.duration = duration\r\n    }\r\n}\r\n","import Session from '../Session'\r\n\r\nexport default class FitnessSession extends Session {\r\n    constructor (dto = {}) {\r\n        super(dto)\r\n    }\r\n}\r\n","\r\nexport function speed (duration, distance, type = 'km/h') {\r\n    if (type === 'min/km') {\r\n        return minutes(duration) / km(distance)\r\n    } else if (type === 'km/h') {\r\n        return km(distance) / hours(duration)\r\n    }\r\n    return undefined\r\n}\r\n\r\nfunction minutes (duration) {\r\n    return duration / 60\r\n}\r\n\r\nfunction hours (duration) {\r\n    return duration / 3600\r\n}\r\n\r\nfunction km (distance) {\r\n    return distance / 1000\r\n}\r\n","export default class RequestError extends Error {\r\n    constructor (request, message) {\r\n        super(`${request} error: ${message}`)\r\n        this.name = 'RequestError'\r\n    }\r\n}\r\n","import _ from 'lodash'\r\nimport { speed } from '../../util/speed'\r\nimport RequestError from '../RequestError'\r\nimport Session from './Session'\r\n\r\nexport default class SpeedSession extends Session {\r\n    constructor ({ id, date, description, distance, duration } = {}) {\r\n        super({ id, date, description, duration })\r\n        this.setRunData({ distance, duration })\r\n    }\r\n\r\n    speed (type) {\r\n        const result = speed(this.duration, this.distance, type)\r\n        if (result) return result\r\n        throw new RequestError('run session speed', `type ${type} undefined`)\r\n    }\r\n\r\n    setRunData ({ distance, duration }) {\r\n        this.distance = distance\r\n        this.duration = duration\r\n        this.kmPerHour = _.round(this.speed('km/h'), 2)\r\n        this.minPerKm = _.round(this.speed('min/km'), 2)\r\n    }\r\n}\r\n","import SpeedSession from '../SpeedSession'\r\n\r\nexport default class RunSession extends SpeedSession {\r\n    constructor (dto = {}) {\r\n        super(dto)\r\n    }\r\n}\r\n","import SpeedSession from '../SpeedSession'\r\n\r\nexport default class TrekkingSession extends SpeedSession {\r\n    constructor ({ elevationGain, ...dto } = {}) {\r\n        super(dto)\r\n        this.setElevationGain(elevationGain)\r\n    }\r\n\r\n    setElevationGain (elevationGain) {\r\n        this.elevationGain = elevationGain\r\n    }\r\n}\r\n","import Session from '../Session'\r\n\r\nexport default class ClimbingSession extends Session {\r\n    constructor (dto = {}) {\r\n        super(dto)\r\n    }\r\n}\r\n","import { uuid } from '../util/data'\r\nimport CommandResponse from './CommandResponse'\r\n\r\nclass ServiceTransaction {\r\n    constructor (repository, readonly) {\r\n        this.repository = repository\r\n        this.readonly = readonly\r\n    }\r\n\r\n    save () {\r\n        !this.readonly && this.repository.save()\r\n    }\r\n\r\n    dispose () {\r\n        !this.readonly && this.repository.dispose()\r\n    }\r\n\r\n    create (entity) {\r\n        !this.readonly && this.repository.create(entity)\r\n    }\r\n\r\n    update (entity) {\r\n        !this.readonly && this.repository.update(entity)\r\n    }\r\n\r\n    delete (entity) {\r\n        !this.readonly && this.repository.delete(entity)\r\n    }\r\n\r\n    getById (id) {\r\n        this.repository.getById(id)\r\n    }\r\n}\r\n\r\nexport default class Service {\r\n    constructor (repository, hooks = {}, settings) {\r\n        this.repository = repository\r\n        this.hooks = hooks\r\n        this.settings = settings\r\n    }\r\n\r\n    createContext (context = {}) {\r\n        const { correlationId } = context\r\n        return {\r\n            correlationId: correlationId || uuid(),\r\n            transaction: new ServiceTransaction(this.repository, this.settings.readonly)\r\n        }\r\n    }\r\n\r\n    validate (command, context) {\r\n        command.validate()\r\n    }\r\n\r\n    beforeExecution (command, context) {\r\n    }\r\n\r\n    apply (command, context) {\r\n    }\r\n\r\n    save (command, context) {\r\n        context.transaction.save()\r\n    }\r\n\r\n    execute (command, commandContext) {\r\n        const context = this.createContext(commandContext)\r\n        try {\r\n            this.beforeExecution(command, context)\r\n            this.hooks.beforeExecution && this.hooks.beforeExecution(command, context)\r\n\r\n            this.validate(command, context)\r\n            this.hooks.validate && this.hooks.validate(command, context)\r\n\r\n            const response = this.hooks.apply\r\n                ? this.hooks.apply(command, context)\r\n                : this.apply(command, context)\r\n\r\n            this.hooks.beforeSave && this.hooks.beforeSave(command, context)\r\n            this.save(command, context)\r\n\r\n            return CommandResponse.createOk(response)\r\n        } catch (error) {\r\n            context.transaction.dispose()\r\n            return CommandResponse.createByError(error)\r\n        }\r\n    }\r\n}\r\n","import IRepository from '../../domain/Repository'\r\nconst fs = require('fs')\r\n\r\nexport default class Repository extends IRepository {\r\n    constructor (file, name) {\r\n        super()\r\n        this.file = file\r\n        this.name = name\r\n\r\n        this.cache = []\r\n    }\r\n\r\n    getData () {\r\n        if (!fs.existsSync(this.file)) return { data: {}, list: [] }\r\n\r\n        const rawdata = fs.readFileSync(this.file)\r\n        const data = JSON.parse(rawdata)\r\n\r\n        return { data, list: data[this.name] || [] }\r\n    }\r\n\r\n    save () {\r\n        if (this.cache.length === 0) return\r\n\r\n        const { data, list } = this.getData()\r\n\r\n        const ids = this.cache.map(e => e.id)\r\n        data[this.name] = [...list.filter(e => !ids.includes(e.id)), ...this.cache]\r\n\r\n        fs.writeFileSync(this.file, JSON.stringify(data))\r\n    }\r\n\r\n    dispose () {\r\n        this.cache = []\r\n    }\r\n\r\n    create (entity) {\r\n        this.cache.push(entity)\r\n    }\r\n\r\n    update (entity) {\r\n        const old = this.cache.find(e => e.id === entity.id)\r\n        if (old) {\r\n            this.cache = this.cache.filter(e => e.id !== entity.id)\r\n        }\r\n        this.cache.push(entity)\r\n    }\r\n\r\n    getById (id) {\r\n        let entity = this.cache.find(e => e.id === id)\r\n        if (entity) return entity\r\n\r\n        const { list } = this.getData()\r\n\r\n        entity = list.find(e => e.id === id)\r\n        if (entity) {\r\n            this.cache.push(entity)\r\n        }\r\n        return entity\r\n    }\r\n}\r\n","import _ from 'lodash'\r\nimport CommandResponseError from './CommandResponseError'\r\nimport Service from './Service'\r\n\r\nexport default class ServiceOnAggegate extends Service {\r\n    constructor (settings = {\r\n        createNew: false,\r\n        getId: _.property('id'),\r\n        create: _.noop,\r\n        createRepo: _.noop\r\n    }, hooks) {\r\n        super(settings.createRepo(), hooks)\r\n        this.settings = settings\r\n    }\r\n\r\n    beforeExecution (command, context) {\r\n        super.beforeExecution(command, context)\r\n        if (this.settings.createNew) {\r\n            context.aggregate = this.settings.create(command)\r\n        } else {\r\n            const aggregateId = this.settings.getId(command)\r\n            const aggregate = this.repository.getById(aggregateId)\r\n            context.aggregate = this.settings.create(aggregate)\r\n        }\r\n    }\r\n\r\n    validate (command, context) {\r\n        super.validate(command, context)\r\n        if (!context.aggregate) {\r\n            throw new CommandResponseError(404, 'entity not found')\r\n        }\r\n    }\r\n\r\n    save (command, context) {\r\n        if (this.settings.createNew) {\r\n            context.transaction.create(context.aggregate)\r\n        } else if (this.settings.delete) {\r\n            context.transaction.delete(context.aggregate)\r\n        } else {\r\n            context.transaction.update(context.aggregate)\r\n        }\r\n        super.save(command, context)\r\n    }\r\n\r\n    apply (command, context) {\r\n        return context.aggregate\r\n    }\r\n}\r\n","import _ from 'lodash'\r\nimport CommandResponse from './CommandResponse'\r\nimport Service from './Service'\r\nimport ServiceOnAggegate from './ServiceOnAggregate'\r\n\r\nclass CreateServiceContext {\r\n    constructor (commandHandler) {\r\n        this.commandHandler = commandHandler\r\n        this.createService = (context) => new Service(context.serviceSettings.createRepo(), context.hooks, context.serviceSettings)\r\n    }\r\n\r\n    toCreateAggregate () {\r\n        this.serviceSettings = { createNew: true }\r\n        this.createService = (context) => new ServiceOnAggegate(context.serviceSettings, context.hooks)\r\n        return this\r\n    }\r\n\r\n    toDeleteAggregate () {\r\n        this.serviceSettings = { delete: true, getId: (command) => command.id }\r\n        this.createService = (context) => new ServiceOnAggegate(context.serviceSettings, context.hooks)\r\n        return this\r\n    }\r\n\r\n    toUpdateAggregate () {\r\n        this.serviceSettings = { createNew: false, getId: (command) => command.id }\r\n        this.createService = (context) => new ServiceOnAggegate(context.serviceSettings, context.hooks)\r\n        return this\r\n    }\r\n\r\n    readonly () {\r\n        this.serviceSettings = { ...this.serviceSettings, readonly: true }\r\n        return this\r\n    }\r\n\r\n    forCommand (type) {\r\n        this.commandHandler.registerCommand(type, this)\r\n        return this\r\n    }\r\n\r\n    entity (create) {\r\n        this.serviceSettings = _.merge(this.serviceSettings, { create })\r\n        return this\r\n    }\r\n\r\n    identify (getId) {\r\n        this.serviceSettings = _.merge(this.serviceSettings, { getId })\r\n        return this\r\n    }\r\n\r\n    repository (type) {\r\n        this.serviceSettings = _.merge(this.serviceSettings, {\r\n            createRepo: () => this.commandHandler.repositoryMap.create(type)\r\n        })\r\n        return this\r\n    }\r\n\r\n    apply (apply) {\r\n        this.hooks = _.merge(this.hooks, { apply })\r\n        return this\r\n    }\r\n}\r\n\r\nexport class CommandHandler {\r\n    constructor (repositoryMap) {\r\n        this.handlers = {}\r\n        this.repositoryMap = repositoryMap\r\n    }\r\n\r\n    registerCommand (type, ServiceClass) {\r\n        type.executor = this\r\n        this.handlers[type] = this.handlers[type] ? { ...this.handlers[type], ServiceClass } : { ServiceClass }\r\n    }\r\n\r\n    execute (command) {\r\n        const { ServiceClass } = this.handlers[Object.getPrototypeOf(command).constructor]\r\n        if (ServiceClass.constructor === CreateServiceContext) {\r\n            const service = ServiceClass.createService(ServiceClass)\r\n            return service.execute(command)\r\n        } else if (ServiceClass) {\r\n            const service = new ServiceClass({ repositoryMap: this.repositoryMap })\r\n            return service.execute(command)\r\n        };\r\n\r\n        return CommandResponse.UNDEFINED_HANDLER\r\n    }\r\n\r\n    createService () {\r\n        return new CreateServiceContext(this)\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class DeleteFitnessSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class DeleteRunSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class DeleteTrekkingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n    }\r\n}\r\n","import Command from '../Command'\r\n\r\nexport default class DeleteClimbingSession extends Command {\r\n    constructor () {\r\n        super()\r\n        this.init('id', 'id')\r\n    }\r\n}\r\n","import _ from 'lodash'\r\nimport RepositoryMap from '../domain/RepositoryMap'\r\nimport FitnessSession from '../domain/session/fitnessSession/FitnessSession'\r\nimport FitnessSessionRepository from '../domain/session/fitnessSession/FitnessSessionRepository'\r\nimport RunSession from '../domain/session/runSession/RunSession'\r\nimport RunSessionRepository from '../domain/session/runSession/RunSessionRepository'\r\nimport TrekkingSession from '../domain/session/trekkingSession/TrekkingSession'\r\nimport TrekkingSessionRepository from '../domain/session/trekkingSession/TrekkingSessionRepository'\r\nimport ClimbingSession from '../domain/session/climbingSession/ClimbingSession'\r\nimport ClimbingSessionRepository from '../domain/session/climbingSession/ClimbingSessionRepository'\r\nimport Repository from '../persistence/local/Repository'\r\nimport { CommandHandler } from './CommandHandler'\r\nimport CreateClimbingSession from './commands/CreateClimbingSession'\r\nimport CreateFitnessSession from './commands/CreateFitnessSession'\r\nimport CreateRunSession from './commands/CreateRunSession'\r\nimport CreateTrekkingSession from './commands/CreateTrekkingSession'\r\nimport DeleteFitnessSession from './commands/DeleteFitnessSession'\r\nimport DeleteRunSession from './commands/DeleteRunSession'\r\nimport DeleteTrekkingSession from './commands/DeleteTrekkingSession'\r\nimport UpdateFitnessSession from './commands/UpdateFitnessSession'\r\nimport UpdateRunSession from './commands/UpdateRunSession'\r\nimport UpdateTrekkingSession from './commands/UpdateTrekkingSession'\r\nimport DeleteClimbingSession from './commands/DeleteClimbingSession'\r\nimport UpdateClimbingSession from './commands/UpdateClimbingSession'\r\nimport ReadSessionByYear from './commands/ReadSessionByYear'\r\nimport ReadSessionsRepository from '../readmodel/ReadSessionsRepository'\r\n\r\nexport const repositoryMap = new RepositoryMap()\r\nexport const commandHandler = new CommandHandler(repositoryMap)\r\n\r\nexport function useLocalRepositories (filename) {\r\n    repositoryMap.registerRepository(FitnessSessionRepository, new Repository(filename, 'fitnessSessions'))\r\n    repositoryMap.registerRepository(TrekkingSessionRepository, new Repository(filename, 'trekkingSessions'))\r\n    repositoryMap.registerRepository(RunSessionRepository, new Repository(filename, 'runSessions'))\r\n    repositoryMap.registerRepository(ClimbingSessionRepository, new Repository(filename, 'climbingSessions'))\r\n}\r\n\r\nexport function initializeServices (ch = commandHandler) {\r\n    ch\r\n        .createService()\r\n        .readonly()\r\n        .forCommand(ReadSessionByYear)\r\n        .repository(ReadSessionsRepository)\r\n        .apply((command, context) => {\r\n            return context.transaction.repository.getAllByYear(command.year)\r\n        })\r\n\r\n    initRunSessionServices(ch)\r\n    initTrekkingSessionServices(ch)\r\n    initFitnessSessionServices(ch)\r\n    initClimbingSessionServices(ch)\r\n}\r\n\r\nfunction initFitnessSessionServices (ch) {\r\n    ch\r\n        .createService()\r\n        .toCreateAggregate()\r\n        .forCommand(CreateFitnessSession)\r\n        .entity(dto => new FitnessSession(dto))\r\n        .repository(FitnessSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toDeleteAggregate()\r\n        .forCommand(DeleteFitnessSession)\r\n        .repository(FitnessSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toUpdateAggregate()\r\n        .forCommand(UpdateFitnessSession)\r\n        .entity(dto => new FitnessSession(dto))\r\n        .repository(FitnessSessionRepository)\r\n        .apply((command, context) => {\r\n            command.date && context.aggregate.setDate(command.date)\r\n            command.description && context.aggregate.setDescription(command.description)\r\n            command.duration && context.aggregate.setDuration(command.duration)\r\n            return context.aggregate\r\n        })\r\n}\r\n\r\nfunction initTrekkingSessionServices (ch) {\r\n    ch\r\n        .createService()\r\n        .toCreateAggregate()\r\n        .forCommand(CreateTrekkingSession)\r\n        .entity(dto => new TrekkingSession(dto))\r\n        .repository(TrekkingSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toDeleteAggregate()\r\n        .forCommand(DeleteTrekkingSession)\r\n        .repository(TrekkingSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toUpdateAggregate()\r\n        .forCommand(UpdateTrekkingSession)\r\n        .entity(dto => new TrekkingSession(dto))\r\n        .repository(TrekkingSessionRepository)\r\n        .apply((command, context) => {\r\n            command.date && context.aggregate.setDate(command.date)\r\n            command.description && context.aggregate.setDescription(command.description)\r\n            command.elevationGain && context.aggregate.setElevationGain(command.elevationGain);\r\n            (command.distance || command.duration) && context.aggregate.setRunData(\r\n                _.merge(\r\n                    { distance: context.aggregate.distance, duration: context.aggregate.duration },\r\n                    { distance: command.distance, duration: command.duration }\r\n                ))\r\n            return context.aggregate\r\n        })\r\n}\r\n\r\nfunction initRunSessionServices (ch) {\r\n    ch\r\n        .createService()\r\n        .toCreateAggregate()\r\n        .forCommand(CreateRunSession)\r\n        .entity(dto => new RunSession(dto))\r\n        .repository(RunSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toDeleteAggregate()\r\n        .forCommand(DeleteRunSession)\r\n        .repository(RunSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toUpdateAggregate()\r\n        .forCommand(UpdateRunSession)\r\n        .entity(dto => new RunSession(dto))\r\n        .repository(RunSessionRepository)\r\n        .apply((command, context) => {\r\n            command.date && context.aggregate.setDate(command.date)\r\n            command.description && context.aggregate.setDescription(command.description);\r\n            (command.distance || command.duration) && context.aggregate.setRunData(\r\n                _.merge(\r\n                    { distance: context.aggregate.distance, duration: context.aggregate.duration },\r\n                    { distance: command.distance, duration: command.duration }\r\n                ))\r\n            return context.aggregate\r\n        })\r\n}\r\n\r\nfunction initClimbingSessionServices (ch) {\r\n    ch\r\n        .createService()\r\n        .toCreateAggregate()\r\n        .forCommand(CreateClimbingSession)\r\n        .entity(dto => new ClimbingSession(dto))\r\n        .repository(ClimbingSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toDeleteAggregate()\r\n        .forCommand(DeleteClimbingSession)\r\n        .repository(ClimbingSessionRepository)\r\n\r\n    ch\r\n        .createService()\r\n        .toUpdateAggregate()\r\n        .forCommand(UpdateClimbingSession)\r\n        .entity(dto => new ClimbingSession(dto))\r\n        .repository(ClimbingSessionRepository)\r\n        .apply((command, context) => {\r\n            command.date && context.aggregate.setDate(command.date)\r\n            command.description && context.aggregate.setDescription(command.description)\r\n            command.duration && context.aggregate.setDuration(command.duration)\r\n            return context.aggregate\r\n        })\r\n}\r\n","import _ from 'lodash'\r\nimport ClimbingSessionRepository from './domain/session/climbingSession/ClimbingSessionRepository'\r\nimport FitnessSessionRepository from './domain/session/fitnessSession/FitnessSessionRepository'\r\nimport RunSessionRepository from './domain/session/runSession/RunSessionRepository'\r\nimport TrekkingSessionRepository from './domain/session/trekkingSession/TrekkingSessionRepository'\r\nimport ReadSessionsRepository from './readmodel/ReadSessionsRepository'\r\nimport CreateClimbingSession from './service/commands/CreateClimbingSession'\r\nimport CreateFitnessSession from './service/commands/CreateFitnessSession'\r\nimport CreateRunSession from './service/commands/CreateRunSession'\r\nimport CreateTrekkingSession from './service/commands/CreateTrekkingSession'\r\nimport ReadSessionByYear from './service/commands/ReadSessionByYear'\r\nimport UpdateClimbingSession from './service/commands/UpdateClimbingSession'\r\nimport UpdateFitnessSession from './service/commands/UpdateFitnessSession'\r\nimport UpdateRunSession from './service/commands/UpdateRunSession'\r\nimport UpdateTrekkingSession from './service/commands/UpdateTrekkingSession'\r\nimport { repositoryMap, commandHandler, initializeServices } from './service/configuration'\r\n\r\nexport function api (url, method, payload) {\r\n    return new Promise((resolve, reject) => {\r\n        if (method === 'POST') {\r\n            if (url === '/api/running/session') {\r\n                const command = new CreateRunSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/fitness/session') {\r\n                const command = new CreateFitnessSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/climbing/session') {\r\n                const command = new CreateClimbingSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/trekking/session') {\r\n                const command = new CreateTrekkingSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n        }\r\n        if (method === 'PUT') {\r\n            if (url === '/api/running/session') {\r\n                const command = new UpdateRunSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/fitness/session') {\r\n                const command = new UpdateFitnessSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/climbing/session') {\r\n                const command = new UpdateClimbingSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n            if (url === '/api/trekking/session') {\r\n                const command = new UpdateTrekkingSession()\r\n                resolve(commandHandler.execute(_.merge(command, payload)))\r\n                return\r\n            }\r\n        }\r\n        if (method === 'GET') {\r\n            if (url.startsWith('/api/sessions/year/')) {\r\n                const command = new ReadSessionByYear()\r\n                command.year = _.toNumber(url.substring('/api/sessions/year/'.length))\r\n                resolve(commandHandler.execute(command))\r\n                return\r\n            }\r\n        }\r\n        reject(new Error('not implemented'))\r\n    })\r\n}\r\n\r\nexport const repositories = {\r\n    fitness: FitnessSessionRepository,\r\n    running: RunSessionRepository,\r\n    trekking: TrekkingSessionRepository,\r\n    climbing: ClimbingSessionRepository,\r\n    sessions: ReadSessionsRepository\r\n}\r\nexport const registerRepository = (type, instance) => repositoryMap.registerRepository(type, instance)\r\n\r\nexport const initialize = initializeServices\r\n","import { api } from 'goals';\n\nconst useGoals = () => {\n    return { api }; \n}\n\nexport default useGoals","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport NewsItem from \"../NewsItem/NewsItem\";\nimport useGoals from \"../useGoals\";\nimport \"./News.css\";\n\nexport default function News() {\n  const { api } = useGoals();\n  const [sessions, setSessions] = useState([]);\n\n  useEffect(() => {\n    api(\"/api/sessions/year/\" + moment().year(), \"GET\").then((response) =>\n      setSessions(response.payload)\n    );\n  }, [api]);\n\n  return (\n    <ol className=\"goals-news\">\n      {sessions.map((n, i) => (\n        <NewsItem key={i} {...n} />\n      ))}\n    </ol>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BsList } from \"react-icons/bs\";\nimport \"./Menu.css\";\n\nexport default function Menu({ children }) {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"goals-menu\">\n      <BsList onClick={() => setShow((s) => !s)} />\n      {show && <div className=\"goals-menu__list\">{children}</div>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Link.css\";\n\nexport default function Link({ Icon, text, url }) {\n  return (\n    <div className=\"goals-toolbar-link\">\n      <Icon title={text} />\n      <a href={url}>{text}</a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { BsBullseye } from \"react-icons/bs\";\nimport { FiSettings } from \"react-icons/fi\";\nimport Menu from \"../Menu/Menu\";\nimport { activities, urlBase } from \"../utils\";\nimport Link from \"./Link\";\nimport \"./Toolbar.css\";\n\nfunction Links() {\n  return (\n    <>\n      {_.map(activities, (act, id) => (\n        <Link\n          key={id}\n          Icon={act.Icon}\n          url={urlBase + `/${id}`}\n          text={act.label}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default function Toolbar() {\n  return (\n    <div className=\"goals-toolbar\">\n      <div className=\"goals-toolbar__logo\">\n        <BsBullseye />\n      </div>\n      <div className=\"goals-toolbar__links\">\n        <Links />\n      </div>\n      <div className=\"goals-toolbar__menu\">\n        <Menu>\n          <div className=\"goals-toolbar__menu-links\">\n            <Links />\n          </div>\n          <br />\n          <Link Icon={FiSettings} url={urlBase + `/settings`} text=\"Settings\" />\n        </Menu>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport News from \"../compoents/News/News\";\nimport Toolbar from \"../compoents/Tootlbar/Toolbar\";\n\nfunction Home() {\n  return (\n    <div className=\"goals-page goals-page--home\">\n      <Toolbar />\n      <News />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nexport default function Input({ id, label, placeholder, value, onChange }) {\n  return (\n    <div className=\"form-item\">\n      <label htmlFor={id}>{label}</label>\n      <input\n        placeholder={placeholder}\n        id={id}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Input from \"../compoents/Input/Input\";\nimport useGoals from \"../compoents/useGoals\";\nimport { activities, activityProps, urlBase } from \"../compoents/utils\";\nimport \"./NewSession.css\";\n\nfunction Tracking({ type }) {\n  const Icon = activities[type].Icon;\n  return (\n    <div className=\"goals-tracking\">\n      {<Icon />}\n      <button>Start Tracking</button>\n    </div>\n  );\n}\n\nfunction CreateNewSession({ type, props }) {\n  const navigate = useNavigate();\n  const [execution, setExecution] = useState();\n  const [state, setState] = useState(\n    _.reduce(\n      props,\n      (obj, p) => ({\n        ...obj,\n        [p]: activityProps[p].createInitValue(),\n      }),\n      {}\n    )\n  );\n  const { api } = useGoals();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const payload = _.reduce(\n      props,\n      (obj, p) => ({\n        ...obj,\n        [p]: activityProps[p].type.toApiValue(state[p]),\n      }),\n      {}\n    );\n    const result = await api(\"/api/\" + type + \"/session\", \"POST\", payload);\n    if (result.code >= 200 && result.code < 300) {\n      navigate(urlBase + \"/\");\n    } else {\n      setExecution({ status: false, message: result.payload });\n    }\n  };\n\n  useEffect(() => {\n    let cleanTimeout = undefined;\n    if (execution) {\n      const timeoutId = setTimeout(() => setExecution(undefined), 5000);\n      cleanTimeout = () => clearTimeout(timeoutId);\n    }\n    return cleanTimeout;\n  }, [execution]);\n\n  return (\n    <form className=\"goals-create-new-session\" onSubmit={handleSubmit}>\n      {props.map((p) => {\n        const { label, inputPlaceholder } = activityProps[p];\n        return (\n          <Input\n            key={p}\n            id={p}\n            label={label}\n            value={state[p]}\n            onChange={(evt) =>\n              setState((s) => ({ ...s, [p]: evt.target.value }))\n            }\n            placeholder={inputPlaceholder}\n          />\n        );\n      })}\n      <div className=\"form-footer\">\n        <input type=\"submit\" value=\"Conferma\" />\n      </div>\n      {execution && execution.status && <div>Created!</div>}\n      {execution && !execution.status && <div>{execution.message}</div>}\n    </form>\n  );\n}\n\nexport default function NewSession({ type, props }) {\n  return (\n    <div className={\"goals-page goals-page--new-session\"}>\n      <Tracking type={type} />\n      <CreateNewSession type={type} props={props} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport NewSession from \"./NewSession\";\n\nexport default function Running() {\n  return (\n    <NewSession\n      type=\"running\"\n      props={[\"date\", \"description\", \"duration\", \"distance\"]}\n    />\n  );\n}\n","export default class LocalSessionRepository  {\n    constructor ( name) {\n        this.name = name\n        this.cache = []\n    }\n\n    getData () {\n        const rawData = localStorage.getItem(this.name);\n        if(!rawData) return [];\n        return JSON.parse(rawData);\n    }\n\n    save () {\n        if (this.cache.length === 0) return\n\n        let list = this.getData()\n\n        const ids = this.cache.map(e => e.id)\n        list = [...list.filter(e => !ids.includes(e.id)), ...this.cache]\n\n        localStorage.setItem(this.name, JSON.stringify(list))\n    }\n\n    dispose () {\n        this.cache = []\n    }\n\n    create (entity) {\n        this.cache.push(entity)\n    }\n\n    update (entity) {\n        const old = this.cache.find(e => e.id === entity.id)\n        if (old) {\n            this.cache = this.cache.filter(e => e.id !== entity.id)\n        }\n        this.cache.push(entity)\n    }\n\n    getById (id) {\n        let entity = this.cache.find(e => e.id === id)\n        if (entity) return entity\n\n        const list = this.getData()\n\n        entity = list.find(e => e.id === id)\n        if (entity) {\n            this.cache.push(entity)\n        }\n        return entity\n    }\n}\n","import _ from \"lodash\";\nimport moment from \"moment\";\nimport LocalSessionRepository from \"./LocalSessionRepository\";\n\nexport default class LocalSessionsRepository  {\n    constructor ( ) {\n        this.names = []\n    }\n\n    registerSession(name) {\n        this.names.push(name)\n    }\n\n    getAllByYear (year) {\n        let result = [];\n\n        this.names.forEach(type => {\n            const items = new LocalSessionRepository(type).getData()\n                .filter(s => moment(s.date).year() === year)\n                .map(s => ({...s, type}));\n            result = [ ...result, ...items ];\n        })\n\n        return _.reverse(_.sortBy(result,[\"date\"]))\n    }\n}\n","import React from \"react\";\nimport NewSession from \"./NewSession\";\n\nexport default function Trekking() {\n  return (\n    <NewSession\n      type=\"trekking\"\n      props={[\"date\", \"description\", \"elevationGain\", \"duration\", \"distance\"]}\n    />\n  );\n}\n","import React from \"react\";\nimport NewSession from \"./NewSession\";\n\nexport default function Climbing() {\n  return (\n    <NewSession type=\"climbing\" props={[\"date\", \"description\", \"duration\"]} />\n  );\n}\n","import React from \"react\";\nimport NewSession from \"./NewSession\";\n\nexport default function Fitness() {\n  return (\n    <NewSession type=\"fitness\" props={[\"date\", \"description\", \"duration\"]} />\n  );\n}\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport useGoals from \"../compoents/useGoals\";\nimport { activityProps } from \"../compoents/utils\";\nimport \"./Settings.css\";\n\nconst keys = [\n  \"type\",\n  \"date\",\n  \"description\",\n  \"distance\",\n  \"duration\",\n  \"elevationGain\",\n  \"id\",\n];\n\nfunction ExportPanel() {\n  const [exportToCsv, setExportToCsv] = useState({});\n  const { api } = useGoals();\n  const exportRef = useRef();\n\n  const handleExport = () => {\n    api(\"/api/sessions/year/\" + moment().year(), \"GET\").then((response) => {\n      const sessions = response.payload;\n      if (sessions.length === 0) return;\n      const header = keys.join(\",\") + \"\\n\";\n      let content =\n        \"data:text/csv;charset=utf-8,\" +\n        header +\n        sessions\n          .map((s) =>\n            keys.map((k) => activityProps[k].type.toCsvValue(s[k])).join(\",\")\n          )\n          .join(\"\\n\");\n      const fileName =\n        \"goals-sessions- \" + moment().format(\"YYYY-MM-DD\") + \".csv\";\n\n      setExportToCsv({ content, fileName });\n    });\n  };\n  useEffect(() => {\n    if (exportToCsv.content) {\n      exportRef.current.click();\n      setExportToCsv({});\n    }\n  }, [exportToCsv.content]);\n\n  return (\n    <>\n      <button onClick={handleExport}>Export Data</button>\n      <a\n        ref={exportRef}\n        className=\"goals-export-csv\"\n        href={exportToCsv.content}\n        download={exportToCsv.fileName}\n      >\n        Donwload Sessions\n      </a>\n    </>\n  );\n}\n\nfunction getSessionsByCsv(text) {\n  const lines = text.split(\"\\n\");\n  const header = lines.shift().split(\",\");\n  return lines.map((line) => {\n    const result = {};\n    const values = line.split(\",\");\n    for (let i = 0; i < header.length; i++) {\n      result[header[i]] = activityProps[header[i]].type.fromCsvValue(values[i]);\n    }\n    return result;\n  });\n}\n\nfunction Import() {\n  const [toImport, setToImport] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { api } = useGoals();\n\n  const handlePrimaryClick = async () => {\n    if (!toImport) {\n      const sessions = getSessionsByCsv(text);\n      for (const session of sessions) {\n        try {\n          await api(\n            \"/api/\" + session.type + \"/session\",\n            session.id ? \"PUT\" : \"POST\",\n            session\n          );\n        } catch (err) {\n          setErrors((e) => [...e, err]);\n        }\n      }\n      setToImport(true);\n    } else {\n      setToImport(false);\n      setErrors([]);\n    }\n  };\n\n  return (\n    <div className=\"goals-settings__import\">\n      <div className=\"goals-settings__import-header\">\n        <button onClick={handlePrimaryClick}>\n          {toImport ? \"Import Data\" : \"Confirm Import\"}\n        </button>\n        {!toImport && (\n          <button\n            onClick={() => {\n              setToImport(true);\n              setErrors([]);\n            }}\n          >\n            Cancel Import\n          </button>\n        )}\n      </div>\n      {!toImport && (\n        <textarea\n          value={text}\n          onChange={(evt) => setText(evt.target.value)}\n          placeholder=\"write CSV data here\"\n        />\n      )}\n      {errors.length > 0 && (\n        <div className=\"goals-settings__import-erros\">\n          {errors.map((err, i) => (\n            <p key={i}>{JSON.stringify(err)}</p>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Settings() {\n  return (\n    <div className=\"goals-page goals-page--settings\">\n      <Import />\n      <ExportPanel />\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter,Routes,Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Running from './pages/Running';\nimport initialize from './local/initilization';\nimport Trekking from './pages/Trekking';\nimport Climbing from './pages/Climbing';\nimport Fitness from './pages/Fitness';\nimport Settings from './pages/Settings';\nimport { urlBase } from './compoents/utils';\n\nvar moment = require(\"moment\");\nvar momentDurationFormatSetup = require(\"moment-duration-format\");\n\nmomentDurationFormatSetup(moment);\n\ninitialize();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={urlBase}>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/running\" element={<Running />} />\n        <Route path=\"/trekking\" element={<Trekking />} />\n        <Route path=\"/climbing\" element={<Climbing />} />\n        <Route path=\"/fitness\" element={<Fitness />} />\n        <Route path=\"/settings\" element={<Settings />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { repositories,registerRepository, initialize as init } from 'goals';\nimport _ from 'lodash';\nimport LocalSessionRepository from './LocalSessionRepository';\nimport LocalSessionsRepository from './LocalSessionsRepository';\n\nexport default function initialize() {\n    init();\n    const sessionsRepository = new LocalSessionsRepository();\n    _.forEach(repositories, (type, name) => {\n        if(name==='sessions') {\n            registerRepository(type, sessionsRepository);\n        } else {\n            sessionsRepository.registerSession(name);\n            registerRepository(type, new LocalSessionRepository(name));\n        }\n    });\n}"],"sourceRoot":""}